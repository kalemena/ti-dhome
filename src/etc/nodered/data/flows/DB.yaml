- id: cf0d480a582294ae
  type: tab
  label: DB
  disabled: false
  info: ''
  env: []
- id: 994a7a64bc1c7656
  type: junction
  z: cf0d480a582294ae
  x: 120
  'y': 1240
  wires:
    - - '9581410703628258'
      - 6e5458755ca35f1b
      - 9147ca10781b15f4
- id: 204ba00bb6a13bac
  type: junction
  z: cf0d480a582294ae
  x: 380
  'y': 1280
  wires:
    - - cc2f0f7f0427b58c
- id: fb7400d80e8fad49
  type: junction
  z: cf0d480a582294ae
  x: 520
  'y': 1500
  wires:
    - - e6dfbafc8c3042c3
      - 8f1a3faa6d1e85ef
- id: 064675a6c9a4fd43
  type: junction
  z: cf0d480a582294ae
  x: 260
  'y': 320
  wires:
    - - 9f381a6c811925c5
      - 4141c8aa2b2d3b22
- id: c7ee104a98cf18f3
  type: moment
  z: cf0d480a582294ae
  name: Parse Epoch
  topic: ''
  input: payload.timestamp
  inputType: msg
  inTz: Europe/Paris
  adjAmount: 0
  adjType: days
  adjDir: add
  format: YYYY-MM-DD
  locale: POSIX
  output: payload.isoDate
  outputType: msg
  outTz: Europe/Paris
  x: 450
  'y': 980
  wires:
    - - 2366bd1e3e03afb8
      - b3652a8e55e370f4
      - b4b61009fc7b0feb
- id: 2366bd1e3e03afb8
  type: function
  z: cf0d480a582294ae
  name: Tempo
  func: >-
    msg.topic = "tempo"


    var datesTempo = global.get("edf.tempo")


    if (datesTempo[msg.payload.isoDate] != undefined) {
        msg.payload.color = datesTempo[msg.payload.isoDate].color
    } else {
        msg.payload.color = 'blue'
    }


    global.set('edf.tempo.colors.' + msg.payload.color, 1);


    switch (msg.payload.period) {

        case 'HC':

            switch (msg.payload.color) {
                case "blue":
                    msg.payload.costUnit = Number(0.0970)
                    break;

                case "white":
                    msg.payload.costUnit = Number(0.1140)
                    break;

                case 'red':
                    msg.payload.costUnit = Number(0.1216)
                    break;
            }        
            
            break;

        case 'HP':

            switch (msg.payload.color) {
                case "blue":
                    msg.payload.costUnit = Number(0.1249)
                    break;

                case "white":
                    msg.payload.costUnit = Number(0.1508)
                    break;

                case 'red':
                    msg.payload.costUnit = Number(0.6712)
                    break;
            }

            break;    
    }


    global.set('edf.tempo.colors.' + msg.payload.color + "-" +
    msg.payload.period, msg.payload.costUnit);


    msg.payload.cost = msg.payload.costUnit * Number(msg.payload.value) / 1000


    return msg;
  outputs: 1
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 630
  'y': 980
  wires:
    - - 7733c07030c21098
- id: 3bee84a27e6cd59c
  type: function
  z: cf0d480a582294ae
  name: scroll energy
  func: |-

    // Trigger as many as days
    //for (var dayEnergy in msg.payload.data.result[0].values) {
    for (var j = 0; j < msg.payload.data.result[0].values.length; j++) {
        let dayData = msg.payload.data.result[0].values[j]
        node.send(
            [
                { 
                    payload: {
                        timestamp: dayData[0] * 1000,
                        value: Number(dayData[1]),
                        period: msg.period
                    }
                }
            ]);
    }

    return null;
  outputs: 1
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 260
  'y': 980
  wires:
    - - c7ee104a98cf18f3
- id: 7733c07030c21098
  type: Topic Frequencies
  z: cf0d480a582294ae
  name: Freqs
  units: hours
  interval: 1
  reportUnits: minutes
  reportInterval: 1
  topicKey: topic
  valueKey: payload.cost
  alignToClock: true
  generator: internal
  x: 840
  'y': 1020
  wires:
    - - ab9d4b85d889183c
      - fbbf19c3b6f8e430
    - []
- id: b3652a8e55e370f4
  type: function
  z: cf0d480a582294ae
  name: HC/HP
  func: |-
    msg.topic = "hchp"

    switch (msg.payload.period) {
        case 'HC':
            msg.payload.costUnit = Number(0.1615)
            break;

        case 'HP':
            msg.payload.costUnit = Number(0.2228)
            break;    
    }

    msg.payload.cost = msg.payload.costUnit * Number(msg.payload.value) / 1000

    return msg;
  outputs: 1
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 640
  'y': 1020
  wires:
    - - 7733c07030c21098
- id: b4b61009fc7b0feb
  type: function
  z: cf0d480a582294ae
  name: Base
  func: |-
    msg.topic = "base"
    msg.payload.costUnit = Number(0.2062)
    msg.payload.cost = msg.payload.costUnit * Number(msg.payload.value) / 1000

    return msg;
  outputs: 1
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 630
  'y': 1060
  wires:
    - - 7733c07030c21098
- id: 9aa81642091a436b
  type: inject
  z: cf0d480a582294ae
  name: Init
  props: []
  repeat: ''
  crontab: ''
  once: true
  onceDelay: 0.1
  topic: ''
  x: 110
  'y': 740
  wires:
    - - f4df2ed060031650
      - a5ea9f561f8a2b2a
      - 432439ee8b7f21ec
- id: 0d6fb4c44fbd1fd0
  type: moment
  z: cf0d480a582294ae
  name: dateISO
  topic: ''
  input: timeFrom
  inputType: msg
  inTz: Europe/Paris
  adjAmount: 0
  adjType: days
  adjDir: add
  format: YYYY-MM-DD
  locale: POSIX
  output: dateISO
  outputType: msg
  outTz: Europe/Paris
  x: 420
  'y': 1140
  wires:
    - - 3c57121b8d27c57c
- id: f4df2ed060031650
  type: file in
  z: cf0d480a582294ae
  name: EDF - Tempo 2022
  filename: /etc/tidhome/EDF-Tempo-2022.csv
  filenameType: str
  format: utf8
  chunk: false
  sendError: false
  encoding: utf8
  allProps: false
  x: 320
  'y': 740
  wires:
    - - 302e9d35b9f224cd
- id: 302e9d35b9f224cd
  type: csv
  z: cf0d480a582294ae
  name: ''
  sep: ','
  hdrin: true
  hdrout: ''
  multi: mult
  ret: \n
  temp: ''
  skip: '0'
  strings: true
  include_empty_strings: false
  include_null_values: false
  x: 490
  'y': 740
  wires:
    - - 598f547a1ac99cb2
- id: eb9dbd2cca4b2e93
  type: debug
  z: cf0d480a582294ae
  name: Config-EDF
  active: false
  tosidebar: true
  console: false
  tostatus: false
  complete: 'true'
  targetType: full
  statusVal: ''
  statusType: auto
  x: 810
  'y': 820
  wires: []
- id: 598f547a1ac99cb2
  type: function
  z: cf0d480a582294ae
  name: store global
  func: |-

    for (var j = 0; j < msg.payload.length; j++) {
        let dayData = msg.payload[j]
        global.set('edf.tempo.' + dayData.date, dayData);
    }

    return null;
  outputs: 1
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 630
  'y': 740
  wires:
    - - eb9dbd2cca4b2e93
- id: a5ea9f561f8a2b2a
  type: change
  z: cf0d480a582294ae
  name: store facts
  rules:
    - t: set
      p: edf.costs.base
      pt: global
      to: '20.62'
      tot: num
    - t: set
      p: edf.costs.hc
      pt: global
      to: '16.15'
      tot: num
    - t: set
      p: edf.costs.hp
      pt: global
      to: '22.28'
      tot: num
    - t: set
      p: edf.tempo.colors
      pt: global
      to: '{"blue":0,"white":0,"red":0}'
      tot: json
  action: ''
  property: ''
  from: ''
  to: ''
  reg: false
  x: 300
  'y': 820
  wires:
    - - eb9dbd2cca4b2e93
- id: 3c9ba4b57c4a6219
  type: comment
  z: cf0d480a582294ae
  name: Mathematics - power - config
  info: ''
  x: 180
  'y': 690
  wires: []
- id: 432439ee8b7f21ec
  type: file in
  z: cf0d480a582294ae
  name: EDF - Tempo 2023
  filename: /etc/tidhome/EDF-Tempo-2023.csv
  filenameType: str
  format: utf8
  chunk: false
  sendError: false
  encoding: utf8
  allProps: false
  x: 320
  'y': 780
  wires:
    - - 302e9d35b9f224cd
- id: 1eb90a76313ade10
  type: comment
  z: cf0d480a582294ae
  name: 'Mathematics - power - formula #1 - query_range'
  info: ''
  x: 240
  'y': 900
  wires: []
- id: ac63d8bf1ed66e71
  type: comment
  z: cf0d480a582294ae
  name: 'Mathematics - power - formula #2 - scroll+offset'
  info: ''
  x: 240
  'y': 1100
  wires: []
- id: 15eee1a293c595fd
  type: inject
  z: cf0d480a582294ae
  name: ''
  props:
    - p: timeStart
      v: '1652382872000'
      vt: num
    - p: timeStart2022May
      v: '1652382872000'
      vt: num
    - p: timeStart2022Nov
      v: '1667282400000'
      vt: num
    - p: timeStart2023
      v: '1672552800000'
      vt: num
    - p: timeEnd
      v: ''
      vt: date
  repeat: ''
  crontab: ''
  once: false
  onceDelay: 0.1
  topic: ''
  x: 110
  'y': 1140
  wires:
    - - ae0d4edaa0a1ecc3
- id: 81d9d4e81ec82ddf
  type: debug
  z: cf0d480a582294ae
  name: 'Debug Fetch #2'
  active: false
  tosidebar: true
  console: false
  tostatus: false
  complete: 'true'
  targetType: full
  statusVal: ''
  statusType: auto
  x: 640
  'y': 1190
  wires: []
- id: ae0d4edaa0a1ecc3
  type: function
  z: cf0d480a582294ae
  name: scroll days
  func: |-

    let timeDay1 = msg.timeStart
    let timeEnd = msg.timeEnd

    while (timeDay1 < timeEnd) {
        // day1 => day2 = 1 full day
        let timeDay2 = timeDay1 + Number(86400 * 1000)

        node.send(
            [
                {
                    timeFrom: timeDay1,
                    timeTo: timeDay2,
                    timeEnd: timeEnd,
                    period: 'HC'
                },
                {
                    timeFrom: timeDay1,
                    timeTo: timeDay2,
                    timeEnd: timeEnd,
                    period: 'HP'
                }
            ]);

        // increment
        timeDay1 = timeDay2
    }

    return null;
  outputs: 2
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 260
  'y': 1140
  wires:
    - - 0d6fb4c44fbd1fd0
    - - 0d6fb4c44fbd1fd0
- id: 3c57121b8d27c57c
  type: function
  z: cf0d480a582294ae
  name: Query HC/HP
  func: >-
    msg.vmQuery = 'avg((sensors_teleinfo_HC' + msg.period +
    '{db="sensors",location="main"} @ ' + (msg.timeTo / 1000) 
        + '- (sensors_teleinfo_HC' + msg.period + '{db="sensors",location="main"} @ ' + (msg.timeFrom / 1000)
        + ')) / 1000)'
    msg.vmURL = "http://victoriametrics:8428/api/v1/query_range"

    // msg.vmRangeStart = "2023-04-25T06:00:01.000Z"

    //msg.vmRangeEnd = "2023-04-30T06:00:01.000Z"


    msg.url = msg.vmURL 
        + "?query=" + msg.vmQuery 
    //    + "&start=" + msg.vmRangeStart

    //    + "&end=" + msg.vmRangeEnd

    //    + "&step=1d"
        
    return msg;
  outputs: 1
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 270
  'y': 1190
  wires:
    - - 3daae04fa5ad767b
- id: 3daae04fa5ad767b
  type: http request
  z: cf0d480a582294ae
  name: Query
  method: GET
  ret: obj
  paytoqs: ignore
  url: ''
  tls: ''
  persist: false
  proxy: ''
  insecureHTTPParser: false
  authType: ''
  senderr: false
  headers: []
  x: 450
  'y': 1190
  wires:
    - - 81d9d4e81ec82ddf
      - 994a7a64bc1c7656
- id: '9581410703628258'
  type: function
  z: cf0d480a582294ae
  name: Base
  func: |-
    msg.topic = "base"
    msg.costUnit = Number(0.2062)

    if (msg.payload.data.result[0].values.length > 0) {
        let dayData = msg.payload.data.result[0].values[0]
        let daykWh = Number(dayData[1])

        let dayCost = msg.costUnit * daykWh

        return {
            cost: dayCost,
            topic: msg.topic
        }
    }

    return null
  outputs: 1
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 240
  'y': 1240
  wires:
    - - 204ba00bb6a13bac
- id: ab9d4b85d889183c
  type: debug
  z: cf0d480a582294ae
  name: 'Debug #1'
  active: false
  tosidebar: true
  console: false
  tostatus: false
  complete: 'true'
  targetType: full
  statusVal: ''
  statusType: auto
  x: 1000
  'y': 1020
  wires: []
- id: d4dcb78a85b8fd01
  type: function
  z: cf0d480a582294ae
  name: periods
  func: |-
    return [ 
        { 
            period: 'HC'
        },
        {
            period: 'HP'
        }
        ]
  outputs: 2
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 250
  'y': 940
  wires:
    - - ec27a942cfa78c58
    - - ec27a942cfa78c58
- id: 942458445b49915c
  type: inject
  z: cf0d480a582294ae
  name: ''
  props: []
  repeat: ''
  crontab: ''
  once: false
  onceDelay: 0.1
  topic: ''
  x: 110
  'y': 940
  wires:
    - - d4dcb78a85b8fd01
- id: ec27a942cfa78c58
  type: function
  z: cf0d480a582294ae
  name: Query
  func: >-
    msg.vmQuery = 'last_over_time(sum(increase(sensors_teleinfo_HC' + msg.period
    + '{location="test2"}[1d]))[1d])'

    msg.vmURL = "http://vmtest:8428/api/v1/query_range"

    msg.vmRangeStart = "2022-05-01T06:00:01.000Z"

    msg.vmRangeEnd = "2023-05-01T06:00:01.000Z"


    msg.url = msg.vmURL 
        + "?query=" + msg.vmQuery 
        + "&start=" + msg.vmRangeStart
        + "&end=" + msg.vmRangeEnd
        + "&step=1d"
        
    return msg;
  outputs: 1
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 430
  'y': 940
  wires:
    - - 61321c793b31fe9b
- id: 61321c793b31fe9b
  type: http request
  z: cf0d480a582294ae
  name: Fetch DB
  method: GET
  ret: obj
  paytoqs: ignore
  url: ''
  tls: ''
  persist: false
  proxy: ''
  insecureHTTPParser: false
  authType: ''
  senderr: false
  headers: []
  x: 580
  'y': 940
  wires:
    - - 3bee84a27e6cd59c
      - b9eaf33614dd786a
- id: b9eaf33614dd786a
  type: debug
  z: cf0d480a582294ae
  name: 'Debug Fetch #1'
  active: false
  tosidebar: true
  console: false
  tostatus: false
  complete: 'true'
  targetType: full
  statusVal: ''
  statusType: auto
  x: 760
  'y': 940
  wires: []
- id: 6e5458755ca35f1b
  type: function
  z: cf0d480a582294ae
  name: HC/HP
  func: |-
    msg.topic = "hchp"

    switch (msg.period) {
        case 'HC':
            msg.costUnit = Number(0.1615)
            break;

        case 'HP':
            msg.costUnit = Number(0.2228)
            break;    
    }

    if (msg.payload.data.result[0].values.length > 0) {
        let dayData = msg.payload.data.result[0].values[0]
        let daykWh = Number(dayData[1])

        let dayCost = msg.costUnit * daykWh

        return {
            cost: dayCost,
            topic: msg.topic
        }
    }

    return null
  outputs: 1
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 250
  'y': 1280
  wires:
    - - 204ba00bb6a13bac
- id: cc2f0f7f0427b58c
  type: Topic Frequencies
  z: cf0d480a582294ae
  name: Freqs
  units: hours
  interval: 1
  reportUnits: minutes
  reportInterval: 1
  topicKey: topic
  valueKey: cost
  alignToClock: true
  generator: internal
  x: 460
  'y': 1280
  wires:
    - - bb33ba25cd6b92e2
      - b4f824ad67b0be80
    - []
- id: bb33ba25cd6b92e2
  type: debug
  z: cf0d480a582294ae
  name: 'Debug #2'
  active: false
  tosidebar: true
  console: false
  tostatus: false
  complete: 'true'
  targetType: full
  statusVal: ''
  statusType: auto
  x: 620
  'y': 1280
  wires: []
- id: 9147ca10781b15f4
  type: function
  z: cf0d480a582294ae
  name: Tempo
  func: >-
    msg.topic = "tempo"


    var datesTempo = global.get("edf.tempo")


    if (datesTempo[msg.dateISO] != undefined) {
        msg.color = datesTempo[msg.dateISO].color
    } else {
        msg.color = 'blue'
    }


    switch (msg.period) {

        case 'HC':

            switch (msg.color) {
                case "blue":
                    msg.costUnit = Number(0.0970)
                    break;

                case "white":
                    msg.costUnit = Number(0.1140)
                    break;

                case 'red':
                    msg.costUnit = Number(0.1216)
                    break;
            }        
            
            break;

        case 'HP':

            switch (msg.color) {
                case "blue":
                    msg.costUnit = Number(0.1249)
                    break;

                case "white":
                    msg.costUnit = Number(0.1508)
                    break;

                case 'red':
                    msg.costUnit = Number(0.6712)
                    break;
            }

            break;    
    }


    global.set('edf.tempo.colors.' + msg.color + "-" + msg.period,
    msg.costUnit);


    if (msg.payload.data.result[0].values.length > 0) {
        let dayData = msg.payload.data.result[0].values[0]
        let daykWh = Number(dayData[1])

        let dayCost = msg.costUnit * daykWh

        return {
            cost: dayCost,
            topic: msg.topic
        }
    }


    return null
  outputs: 1
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 240
  'y': 1320
  wires:
    - - 204ba00bb6a13bac
- id: fbbf19c3b6f8e430
  type: change
  z: cf0d480a582294ae
  name: ''
  rules:
    - t: set
      p: edf.costs.formula1
      pt: global
      to: topics
      tot: msg
      dc: true
  action: ''
  property: ''
  from: ''
  to: ''
  reg: false
  x: 1060
  'y': 1070
  wires:
    - []
- id: b4f824ad67b0be80
  type: change
  z: cf0d480a582294ae
  name: ''
  rules:
    - t: set
      p: edf.costs.formula2
      pt: global
      to: topics
      tot: msg
      dc: true
  action: ''
  property: ''
  from: ''
  to: ''
  reg: false
  x: 680
  'y': 1330
  wires:
    - []
- id: 34b91b78d80e9b18
  type: file in
  z: cf0d480a582294ae
  name: EDF - Timeline miss
  filename: /etc/tidhome/EDF-Migration-holes.csv
  filenameType: str
  format: utf8
  chunk: false
  sendError: false
  encoding: utf8
  allProps: false
  x: 290
  'y': 1460
  wires:
    - - d7c8b9aa4ece1574
- id: d7c8b9aa4ece1574
  type: csv
  z: cf0d480a582294ae
  name: ''
  sep: ','
  hdrin: true
  hdrout: ''
  multi: mult
  ret: \n
  temp: ''
  skip: '0'
  strings: true
  include_empty_strings: false
  include_null_values: false
  x: 460
  'y': 1460
  wires:
    - - b0e9f1b5a6dca969
      - 205520c7b4338967
- id: 09cec3590c9481ab
  type: inject
  z: cf0d480a582294ae
  name: ''
  props:
    - p: sensorLocation
      v: test
      vt: str
  repeat: ''
  crontab: ''
  once: false
  onceDelay: 0.1
  topic: ''
  x: 110
  'y': 1460
  wires:
    - - 34b91b78d80e9b18
- id: b0e9f1b5a6dca969
  type: debug
  z: cf0d480a582294ae
  name: debug 9
  active: false
  tosidebar: true
  console: false
  tostatus: false
  complete: 'false'
  statusVal: ''
  statusType: auto
  x: 610
  'y': 1460
  wires: []
- id: 205520c7b4338967
  type: split
  z: cf0d480a582294ae
  name: ''
  splt: \n
  spltType: str
  arraySplt: 1
  arraySpltType: len
  stream: false
  addname: ''
  x: 240
  'y': 1500
  wires:
    - - 1df7fa1d5bbf8fe0
- id: e6dfbafc8c3042c3
  type: debug
  z: cf0d480a582294ae
  name: debug 10
  active: true
  tosidebar: true
  console: false
  tostatus: false
  complete: 'true'
  targetType: full
  statusVal: ''
  statusType: auto
  x: 610
  'y': 1500
  wires: []
- id: 1df7fa1d5bbf8fe0
  type: function
  z: cf0d480a582294ae
  name: Query Insert VM
  func: >-
    msg.vmURL = "http://vmtest:8428/api/v1/import/prometheus"


    let indexHC = parseInt(Number(msg.payload.IndexHC))

    let indexHP = parseInt(Number(msg.payload.IndexHP))


    let incHC = parseInt(Number(msg.payload.HC))

    let incHP = parseInt(Number(msg.payload.HP))


    let url = msg.vmURL + "?timestamp=" + (new
    Date(msg.payload.timestamp).getTime())

    let payloadHC = 'sensors_teleinfo_HCHC{location="' + msg.sensorLocation +
    '"} ' + Number(indexHC + incHC)

    let payloadHP = 'sensors_teleinfo_HCHP{location="' + msg.sensorLocation +
    '"} ' + Number(indexHP + incHP)


    return [
        {
            url: url,
            payload: payloadHC
        },
        {
            url: url,
            payload: payloadHP
        }
    ]
  outputs: 2
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 410
  'y': 1500
  wires:
    - - fb7400d80e8fad49
    - - fb7400d80e8fad49
- id: b2ef45d51966e389
  type: comment
  z: cf0d480a582294ae
  name: Migrate - power - fix timeline
  info: ''
  x: 180
  'y': 1420
  wires: []
- id: 1eae10dbef23d854
  type: debug
  z: cf0d480a582294ae
  name: debug 11
  active: false
  tosidebar: true
  console: false
  tostatus: false
  complete: 'true'
  targetType: full
  statusVal: ''
  statusType: auto
  x: 380
  'y': 1540
  wires: []
- id: 8f1a3faa6d1e85ef
  type: http request
  z: cf0d480a582294ae
  name: Query
  method: POST
  ret: txt
  paytoqs: ignore
  url: ''
  tls: ''
  persist: false
  proxy: ''
  insecureHTTPParser: false
  authType: ''
  senderr: false
  headers: []
  x: 240
  'y': 1540
  wires:
    - - 1eae10dbef23d854
- id: cc675ec4.106d
  type: comment
  z: cf0d480a582294ae
  name: Sensors - Heaters/Power/RFM868
  info: ''
  x: 200
  'y': 80
  wires: []
- id: 90d304a9.c871a
  type: mqtt in
  z: cf0d480a582294ae
  name: sensors/#
  topic: sensors/#
  qos: '2'
  datatype: json
  broker: c38452a5.4f84e8
  nl: false
  rap: false
  inputs: 0
  x: 120
  'y': 120
  wires:
    - - dcd509f1.d56dd
- id: 14def27.355280e
  type: debug
  z: cf0d480a582294ae
  name: Debug
  active: false
  tosidebar: true
  console: true
  tostatus: false
  complete: 'true'
  targetType: full
  x: 440
  'y': 120
  wires: []
- id: dcd509f1.d56dd
  type: function
  z: cf0d480a582294ae
  name: Store Global
  func: |-
    var topicNodesPrefix = 'tidhome.sensors.' + msg.payload.gateway + '.nodes'
    var nodes = global.get(topicNodesPrefix) || [];
    for (var i = 0; i < nodes.length; i++) {
        if(nodes[i].id === msg.payload.id) {
            // found node
            let entryStr = (msg.payload.entry != undefined) ? ('-' + msg.payload.entry) : ''
            global.set(topicNodesPrefix + '[' + i + '].' + msg.payload.type + entryStr, msg.payload.value);
            global.set(topicNodesPrefix + '[' + i + '].timestamp', msg.payload.timestamp);
        }
    }
    // pass through
    return msg;
  outputs: 1
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 280
  'y': 120
  wires:
    - - 14def27.355280e
- id: 694da039.ceca8
  type: catch
  z: cf0d480a582294ae
  name: ''
  scope: null
  uncaught: false
  x: 120
  'y': 40
  wires:
    - - 950a0758.599f88
- id: 950a0758.599f88
  type: link out
  z: cf0d480a582294ae
  name: General CatchAll
  links:
    - 1bf42829.b3e0b8
  x: 275
  'y': 40
  wires: []
- id: b07467b620e87a9b
  type: comment
  z: cf0d480a582294ae
  name: Solar - OpenDTU
  info: ''
  x: 140
  'y': 500
  wires: []
- id: fd3bdcda17442d2e
  type: mqtt in
  z: cf0d480a582294ae
  name: solar/#
  topic: solar/#
  qos: '2'
  datatype: utf8
  broker: c38452a5.4f84e8
  nl: false
  rap: false
  inputs: 0
  x: 110
  'y': 540
  wires:
    - - 7c650ace12c32993
- id: 7c650ace12c32993
  type: debug
  z: cf0d480a582294ae
  name: Debug
  active: false
  tosidebar: true
  console: true
  tostatus: false
  complete: 'true'
  targetType: full
  x: 440
  'y': 540
  wires: []
- id: 794c9a35ab495787
  type: comment
  z: cf0d480a582294ae
  name: insert - events
  info: ''
  x: 130
  'y': 260
  wires: []
- id: 4141c8aa2b2d3b22
  type: debug
  z: cf0d480a582294ae
  name: ''
  active: false
  tosidebar: true
  console: false
  tostatus: false
  complete: 'true'
  targetType: full
  statusVal: ''
  statusType: auto
  x: 350
  'y': 340
  wires: []
- id: c54b6b3075201912
  type: mqtt in
  z: cf0d480a582294ae
  name: sensors
  topic: sensors
  qos: '2'
  datatype: json
  broker: c38452a5.4f84e8
  nl: false
  rap: false
  inputs: 0
  x: 110
  'y': 300
  wires:
    - - 064675a6c9a4fd43
- id: 9f381a6c811925c5
  type: function
  z: cf0d480a582294ae
  name: Wrap
  func: |
    var msgres = msg.payload
    return msgres;
  outputs: 1
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 350
  'y': 300
  wires:
    - - 467510bb8765ad25
      - 71930ec74ed1c51f
- id: 467510bb8765ad25
  type: debug
  z: cf0d480a582294ae
  name: ''
  active: false
  tosidebar: true
  console: false
  tostatus: false
  complete: 'true'
  targetType: full
  statusVal: ''
  statusType: auto
  x: 530
  'y': 340
  wires: []
- id: 71930ec74ed1c51f
  type: influxdb out
  z: cf0d480a582294ae
  influxdb: 2b52259bfe2133a5
  name: ''
  measurement: ''
  precision: ''
  retentionPolicy: ''
  database: ''
  retentionPolicyV18Flux: ''
  org: ''
  bucket: ''
  x: 570
  'y': 300
  wires: []
- id: 8f74f3f76c223f4d
  type: link in
  z: cf0d480a582294ae
  name: DB-Insert
  links:
    - 78c90ae53c32e0c1
    - 217fc7c76bf682ea
    - bd608bdcef55352f
    - dcc503f036cd122b
    - edacb98cc2cf3239
    - ae9f3e3b816d1937
  x: 145
  'y': 350
  wires:
    - - 064675a6c9a4fd43
