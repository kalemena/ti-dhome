- id: ec75ad2cb670e9c0
  type: tab
  label: Sensors
  disabled: false
  info: ''
  env: []
- id: 9695703c2344fa5a
  type: junction
  z: ec75ad2cb670e9c0
  x: 1130
  'y': 320
  wires:
    - - dcc503f036cd122b
- id: 48cdf1ba85dfcd37
  type: serial in
  z: ec75ad2cb670e9c0
  name: CurrentCost
  serial: 2389cf8558b3742d
  x: 110
  'y': 140
  wires:
    - - 44401c61545f8b54
- id: 44401c61545f8b54
  type: xml
  z: ec75ad2cb670e9c0
  name: xml2json
  property: payload
  attr: ''
  chr: ''
  x: 210
  'y': 220
  wires:
    - - bbc11ee1b53a74b6
- id: 7894147300ba4e35
  type: mqtt out
  z: ec75ad2cb670e9c0
  name: sensors/xxx/nodes/...
  topic: ''
  qos: ''
  retain: ''
  broker: c38452a5.4f84e8
  x: 1010
  'y': 190
  wires: []
- id: 9b9aa3979144f9f4
  type: catch
  z: ec75ad2cb670e9c0
  name: ''
  scope: null
  uncaught: false
  x: 100
  'y': 60
  wires:
    - - b38faeed3daa5034
- id: b38faeed3daa5034
  type: link out
  z: ec75ad2cb670e9c0
  name: General CatchAll
  links:
    - 1bf42829.b3e0b8
  x: 255
  'y': 60
  wires: []
- id: d6e08f42e4a188de
  type: debug
  z: ec75ad2cb670e9c0
  name: CCDebug
  active: false
  tosidebar: true
  console: false
  tostatus: false
  complete: 'true'
  targetType: full
  statusVal: ''
  statusType: auto
  x: 820
  'y': 260
  wires: []
- id: 0e9eb4e190902bd8
  type: function
  z: ec75ad2cb670e9c0
  name: power-inst
  func: |-
    var msgres1 =  {
        payload: {
            payload: [
                { "value": Number(msg.payload.value) },
                { "type": "power-inst", "location": msg.payload.name }
            ],
            measurement: "sensors"
        }
    }

    var msgres2 = {
        payload: {
            payload: [
                { "ccost_PAPP": Number(msg.payload.value) },
                { "location": msg.payload.name }
            ],
            measurement: "sensors"
        }
    }

    return [
        msgres1,
        msgres2
    ]
  outputs: 2
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 1000
  'y': 300
  wires:
    - - 9695703c2344fa5a
    - - 9695703c2344fa5a
      - 4575d700fd60f480
- id: aae3f5fc1bf84067
  type: switch
  z: ec75ad2cb670e9c0
  name: ''
  property: payload.type
  propertyType: msg
  rules:
    - t: eq
      v: watts
      vt: str
    - t: eq
      v: temperature
      vt: str
    - t: else
  checkall: 'true'
  repair: false
  outputs: 3
  x: 820
  'y': 310
  wires:
    - - 0e9eb4e190902bd8
    - - 03f4e78666d3f120
    - - 88197bac85a955f3
- id: 6fb898c071ee2fdd
  type: function
  z: ec75ad2cb670e9c0
  name: Friendly name
  func: |-
    var tidhome = global.get("tidhome") || {}
    sensors = tidhome.sensors || {}
    currsnetcostNodes = sensors.currentcost.nodes || {}

    let i = 0;
    let len = currsnetcostNodes.length;
    for (; i < len; ) {
      if(currsnetcostNodes[i].id === msg.payload.id) {
        msg.payload.name = "cc-" + msg.payload.id + "-" + currsnetcostNodes[i].location || "Unknown"
      }
      i++;
    } 

    // pass through
    return msg;
  outputs: 1
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 620
  'y': 280
  wires:
    - - d6e08f42e4a188de
      - aae3f5fc1bf84067
- id: 88197bac85a955f3
  type: debug
  z: ec75ad2cb670e9c0
  name: CCDebug
  active: false
  tosidebar: true
  console: false
  tostatus: false
  complete: 'true'
  targetType: full
  statusVal: ''
  statusType: auto
  x: 990
  'y': 380
  wires: []
- id: 03f4e78666d3f120
  type: function
  z: ec75ad2cb670e9c0
  name: temperature
  func: |
    var msgres1 =  {
        payload: {
            payload: [
                { "value": Number(msg.payload.value) },
                { "type": "temperature", "location": "cc-Bureau" }
            ],
            measurement: "sensors"
        }
    }

    var msgres2 = {
        payload: {
            payload: [
                { "ccost_temperature": Number(msg.payload.value) },
                { "location": "cc-Bureau" }
            ],
            measurement: "sensors"
        }
    }

    return [
        msgres1,
        msgres2
    ]
  outputs: 2
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 1000
  'y': 340
  wires:
    - - 9695703c2344fa5a
    - - 9695703c2344fa5a
- id: bbc11ee1b53a74b6
  type: switch
  z: ec75ad2cb670e9c0
  name: ''
  property: 'payload.msg.type[0]'
  propertyType: msg
  rules:
    - t: eq
      v: '1'
      vt: str
    - t: eq
      v: '2'
      vt: str
    - t: else
  checkall: 'true'
  repair: false
  outputs: 3
  x: 340
  'y': 180
  wires:
    - - e018d12e8cad5fbf
    - - 77da59c25f261bfc
    - - 77da59c25f261bfc
- id: 77da59c25f261bfc
  type: debug
  z: ec75ad2cb670e9c0
  name: CCDebug
  active: false
  tosidebar: true
  console: false
  tostatus: false
  complete: 'true'
  targetType: full
  statusVal: ''
  statusType: auto
  x: 490
  'y': 200
  wires: []
- id: e018d12e8cad5fbf
  type: function
  z: ec75ad2cb670e9c0
  name: 'sensor Type, "1" = electricity'
  func: >-
    // name: Parse CurrentCost

    // outputs: 1

    var outputMsgs = []

    var timestampH = new Date().toISOString()

    var timestamp = new Date().getTime()


    // temperature

    if(msg.payload.msg.tmpr != undefined && msg.payload.msg.sensor[0] == '1') {
        // sensors/iotpower/nodes/1/entries/1/events/temperature
        let type = 'temperature'
        let nodeid = 1 // Bureau
        let entry = 1
        let value = msg.payload.msg.tmpr[0]
        
        let msgT = {}
        msgT.topic = 'sensors/iotpower/nodes/' + nodeid + '/entries/' + entry + '/events/' + type;
        msgT.payload = { 
            "gateway":"iotpower",
            "id": nodeid,
            "entry": entry,
            "type": type,
            "value": parseFloat(value),
            "timestamp": timestamp,
            "timestamp-human": timestampH
        }
        let displayMsg = msgT.payload.id + "/" + msgT.payload.type + "=" + msgT.payload.value
        node.status({ fill:"orange", shape:"dot", text: displayMsg });
        outputMsgs.push(msgT);
        // node.warn("CC event temp:\n" + JSON.stringify(msgT))
    }


    // Live power

    if(msg.payload.msg.sensor != undefined && msg.payload.msg.sensor[0] !=
    undefined) {
        // sensors/iotpower/nodes/.../entries/0/events/watts
        let type = 'watts'
        let nodeid = parseInt(msg.payload.msg.sensor[0])
        let entry = 0
        let value = msg.payload.msg.ch1[0].watts[0]
        
        let msgP = {}
        msgP.topic = 'sensors/iotpower/nodes/' + nodeid + '/entries/' + entry + '/events/' + type;
        msgP.payload = { 
            "gateway":"iotpower",
            "id": nodeid,
            "entry": entry,
            "type": type,
            "value": parseFloat(value),
            "timestamp": timestamp,
            "timestamp-human": timestampH
        }
        let displayMsg = msgP.payload.id + " => " + msgP.payload.value + " " + msgP.payload.type
        node.status({ fill:"blue", shape:"dot", text: displayMsg });
        outputMsgs.push(msgP);
        // node.warn("CC event:\n" + JSON.stringify(msg))
    }


    /*

    // History power

    for (var i in msg.payload.msg.hist[0].data) {
        var chunk = msg.payload.msg.hist[0].data[i];
        var chunkClean = {};
        for (var j in chunk) {
            chunkClean[j] = chunk[j][0];
        }
        var topic = 'sensors/03967/entries/' + chunk.sensor[0] + '/history/power';
        outputMsgs.push( { topic:topic, payload: chunkClean });
    }

    */


    return [ outputMsgs ];
  outputs: 1
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 550
  'y': 140
  wires:
    - - 7894147300ba4e35
      - 6fb898c071ee2fdd
      - 2b3793d257e19809
- id: 2b3793d257e19809
  type: debug
  z: ec75ad2cb670e9c0
  name: CC W Debug
  active: false
  tosidebar: true
  console: false
  tostatus: false
  complete: 'true'
  targetType: full
  statusVal: ''
  statusType: auto
  x: 980
  'y': 140
  wires: []
- id: dcc503f036cd122b
  type: link out
  z: ec75ad2cb670e9c0
  name: link out 3
  mode: link
  links:
    - 8f74f3f76c223f4d
  x: 1175
  'y': 320
  wires: []
- id: 4575d700fd60f480
  type: debug
  z: ec75ad2cb670e9c0
  name: CCDebug
  active: false
  tosidebar: true
  console: false
  tostatus: false
  complete: 'true'
  targetType: full
  statusVal: ''
  statusType: auto
  x: 1220
  'y': 260
  wires: []
