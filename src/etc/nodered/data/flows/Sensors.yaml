- id: ec75ad2cb670e9c0
  type: tab
  label: Sensors
  disabled: false
  info: ''
  env: []
- id: 9695703c2344fa5a
  type: junction
  z: ec75ad2cb670e9c0
  x: 1130
  'y': 320
  wires:
    - - dcc503f036cd122b
- id: 4f3f06d7be8ae294
  type: junction
  z: ec75ad2cb670e9c0
  x: 1110
  'y': 1260
  wires:
    - - deee902d14d9f69f
      - edacb98cc2cf3239
- id: 3a926826af10884b
  type: junction
  z: ec75ad2cb670e9c0
  x: 1370
  'y': 1440
  wires:
    - - a8ad9ac1058063da
      - edacb98cc2cf3239
- id: 214a7a3538c0f9d7
  type: junction
  z: ec75ad2cb670e9c0
  x: 880
  'y': 1490
  wires:
    - - 19075162ee42791e
      - 02b328556dfff5f1
- id: e20462ad11c24a6e
  type: junction
  z: ec75ad2cb670e9c0
  x: 1050
  'y': 1600
  wires:
    - - 2824712821b59f6c
      - d07cbbeeea4b6838
- id: 48cdf1ba85dfcd37
  type: serial in
  z: ec75ad2cb670e9c0
  name: CurrentCost
  serial: 2389cf8558b3742d
  x: 110
  'y': 140
  wires:
    - - 44401c61545f8b54
- id: 44401c61545f8b54
  type: xml
  z: ec75ad2cb670e9c0
  name: xml2json
  property: payload
  attr: ''
  chr: ''
  x: 210
  'y': 220
  wires:
    - - bbc11ee1b53a74b6
- id: 7894147300ba4e35
  type: mqtt out
  z: ec75ad2cb670e9c0
  name: sensors/xxx/nodes/...
  topic: ''
  qos: ''
  retain: ''
  broker: c38452a5.4f84e8
  x: 1010
  'y': 190
  wires: []
- id: 9b9aa3979144f9f4
  type: catch
  z: ec75ad2cb670e9c0
  name: ''
  scope: null
  uncaught: false
  x: 100
  'y': 60
  wires:
    - - b38faeed3daa5034
- id: b38faeed3daa5034
  type: link out
  z: ec75ad2cb670e9c0
  name: General CatchAll
  links:
    - 1bf42829.b3e0b8
  x: 255
  'y': 60
  wires: []
- id: d6e08f42e4a188de
  type: debug
  z: ec75ad2cb670e9c0
  name: CCDebug
  active: false
  tosidebar: true
  console: false
  tostatus: false
  complete: 'true'
  targetType: full
  statusVal: ''
  statusType: auto
  x: 820
  'y': 260
  wires: []
- id: 0e9eb4e190902bd8
  type: function
  z: ec75ad2cb670e9c0
  name: power-inst
  func: |-
    var msgres1 =  {
        payload: {
            payload: [
                { "value": Number(msg.payload.value) },
                { "type": "power-inst", "location": msg.payload.name }
            ],
            measurement: "sensors"
        }
    }

    var msgres2 = {
        payload: {
            payload: [
                { "ccost_PAPP": Number(msg.payload.value) },
                { "location": msg.payload.name }
            ],
            measurement: "sensors"
        }
    }

    return [
        msgres1,
        msgres2
    ]
  outputs: 2
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 1000
  'y': 300
  wires:
    - - 9695703c2344fa5a
    - - 9695703c2344fa5a
      - 4575d700fd60f480
- id: aae3f5fc1bf84067
  type: switch
  z: ec75ad2cb670e9c0
  name: ''
  property: payload.type
  propertyType: msg
  rules:
    - t: eq
      v: watts
      vt: str
    - t: eq
      v: temperature
      vt: str
    - t: else
  checkall: 'true'
  repair: false
  outputs: 3
  x: 820
  'y': 310
  wires:
    - - 0e9eb4e190902bd8
    - - 03f4e78666d3f120
    - - 88197bac85a955f3
- id: 6fb898c071ee2fdd
  type: function
  z: ec75ad2cb670e9c0
  name: Friendly name
  func: |-
    var tidhome = global.get("tidhome") || {}
    sensors = tidhome.sensors || {}
    currsnetcostNodes = sensors.currentcost.nodes || {}

    let i = 0;
    let len = currsnetcostNodes.length;
    for (; i < len; ) {
      if(currsnetcostNodes[i].id === msg.payload.id) {
        msg.payload.name = "cc-" + msg.payload.id + "-" + currsnetcostNodes[i].location || "Unknown"
      }
      i++;
    } 

    // pass through
    return msg;
  outputs: 1
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 620
  'y': 280
  wires:
    - - d6e08f42e4a188de
      - aae3f5fc1bf84067
- id: 88197bac85a955f3
  type: debug
  z: ec75ad2cb670e9c0
  name: CCDebug
  active: false
  tosidebar: true
  console: false
  tostatus: false
  complete: 'true'
  targetType: full
  statusVal: ''
  statusType: auto
  x: 990
  'y': 380
  wires: []
- id: 03f4e78666d3f120
  type: function
  z: ec75ad2cb670e9c0
  name: temperature
  func: |
    var msgres1 =  {
        payload: {
            payload: [
                { "value": Number(msg.payload.value) },
                { "type": "temperature", "location": "cc-Bureau" }
            ],
            measurement: "sensors"
        }
    }

    var msgres2 = {
        payload: {
            payload: [
                { "ccost_temperature": Number(msg.payload.value) },
                { "location": "cc-Bureau" }
            ],
            measurement: "sensors"
        }
    }

    return [
        msgres1,
        msgres2
    ]
  outputs: 2
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 1000
  'y': 340
  wires:
    - - 9695703c2344fa5a
    - - 9695703c2344fa5a
- id: bbc11ee1b53a74b6
  type: switch
  z: ec75ad2cb670e9c0
  name: ''
  property: 'payload.msg.type[0]'
  propertyType: msg
  rules:
    - t: eq
      v: '1'
      vt: str
    - t: eq
      v: '2'
      vt: str
    - t: else
  checkall: 'true'
  repair: false
  outputs: 3
  x: 340
  'y': 180
  wires:
    - - e018d12e8cad5fbf
    - - 77da59c25f261bfc
    - - 77da59c25f261bfc
- id: 77da59c25f261bfc
  type: debug
  z: ec75ad2cb670e9c0
  name: CCDebug
  active: false
  tosidebar: true
  console: false
  tostatus: false
  complete: 'true'
  targetType: full
  statusVal: ''
  statusType: auto
  x: 490
  'y': 200
  wires: []
- id: e018d12e8cad5fbf
  type: function
  z: ec75ad2cb670e9c0
  name: 'sensor Type, "1" = electricity'
  func: >-
    // name: Parse CurrentCost

    // outputs: 1

    var outputMsgs = []

    var timestampH = new Date().toISOString()

    var timestamp = new Date().getTime()


    // temperature

    if(msg.payload.msg.tmpr != undefined && msg.payload.msg.sensor[0] == '1') {
        // sensors/iotpower/nodes/1/entries/1/events/temperature
        let type = 'temperature'
        let nodeid = 1 // Bureau
        let entry = 1
        let value = msg.payload.msg.tmpr[0]
        
        let msgT = {}
        msgT.topic = 'sensors/iotpower/nodes/' + nodeid + '/entries/' + entry + '/events/' + type;
        msgT.payload = { 
            "gateway":"iotpower",
            "id": nodeid,
            "entry": entry,
            "type": type,
            "value": parseFloat(value),
            "timestamp": timestamp,
            "timestamp-human": timestampH
        }
        let displayMsg = msgT.payload.id + "/" + msgT.payload.type + "=" + msgT.payload.value
        node.status({ fill:"orange", shape:"dot", text: displayMsg });
        outputMsgs.push(msgT);
        // node.warn("CC event temp:\n" + JSON.stringify(msgT))
    }


    // Live power

    if(msg.payload.msg.sensor != undefined && msg.payload.msg.sensor[0] !=
    undefined) {
        // sensors/iotpower/nodes/.../entries/0/events/watts
        let type = 'watts'
        let nodeid = parseInt(msg.payload.msg.sensor[0])
        let entry = 0
        let value = msg.payload.msg.ch1[0].watts[0]
        
        let msgP = {}
        msgP.topic = 'sensors/iotpower/nodes/' + nodeid + '/entries/' + entry + '/events/' + type;
        msgP.payload = { 
            "gateway":"iotpower",
            "id": nodeid,
            "entry": entry,
            "type": type,
            "value": parseFloat(value),
            "timestamp": timestamp,
            "timestamp-human": timestampH
        }
        let displayMsg = msgP.payload.id + " => " + msgP.payload.value + " " + msgP.payload.type
        node.status({ fill:"blue", shape:"dot", text: displayMsg });
        outputMsgs.push(msgP);
        // node.warn("CC event:\n" + JSON.stringify(msg))
    }


    /*

    // History power

    for (var i in msg.payload.msg.hist[0].data) {
        var chunk = msg.payload.msg.hist[0].data[i];
        var chunkClean = {};
        for (var j in chunk) {
            chunkClean[j] = chunk[j][0];
        }
        var topic = 'sensors/03967/entries/' + chunk.sensor[0] + '/history/power';
        outputMsgs.push( { topic:topic, payload: chunkClean });
    }

    */


    return [ outputMsgs ];
  outputs: 1
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 550
  'y': 140
  wires:
    - - 7894147300ba4e35
      - 6fb898c071ee2fdd
      - 2b3793d257e19809
- id: 2b3793d257e19809
  type: debug
  z: ec75ad2cb670e9c0
  name: CC W Debug
  active: false
  tosidebar: true
  console: false
  tostatus: false
  complete: 'true'
  targetType: full
  statusVal: ''
  statusType: auto
  x: 980
  'y': 140
  wires: []
- id: dcc503f036cd122b
  type: link out
  z: ec75ad2cb670e9c0
  name: link out 3
  mode: link
  links:
    - 8f74f3f76c223f4d
  x: 1175
  'y': 320
  wires: []
- id: 4575d700fd60f480
  type: debug
  z: ec75ad2cb670e9c0
  name: CCDebug
  active: false
  tosidebar: true
  console: false
  tostatus: false
  complete: 'true'
  targetType: full
  statusVal: ''
  statusType: auto
  x: 1220
  'y': 260
  wires: []
- id: a8cd2888c83eb4f6
  type: serial in
  z: ec75ad2cb670e9c0
  name: Jeelink
  serial: aa3008f8a002170a
  x: 90
  'y': 480
  wires:
    - - e324eb60e5e0fd71
- id: 82feacacfc9ee30f
  type: mqtt out
  z: ec75ad2cb670e9c0
  name: sensors/xxx/nodes/...
  topic: ''
  qos: ''
  retain: ''
  broker: c38452a5.4f84e8
  x: 760
  'y': 480
  wires: []
- id: 03653501b09f1ff3
  type: debug
  z: ec75ad2cb670e9c0
  name: Debug
  active: false
  tosidebar: true
  console: true
  tostatus: false
  complete: 'true'
  targetType: full
  x: 1140
  'y': 550
  wires: []
- id: 51b1bc3751c94bf7
  type: function
  z: ec75ad2cb670e9c0
  name: query insert
  func: >-
    var msgres =  {
        payload: {
            payload: [
                { "value": Number(msg.payload.value) },
                { "type": msg.payload.type, "location": msg.topic }
            ],
            measurement: "sensors"
        }
    }


    node.status({ fill: "blue", shape: "dot", text: msg.topic + ": " +
    Number(msg.payload.value) });


    return msgres;
  outputs: 1
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 930
  'y': 570
  wires:
    - - 62a23415b0a2245c
      - 03653501b09f1ff3
- id: 62a23415b0a2245c
  type: mqtt out
  z: ec75ad2cb670e9c0
  name: sensors
  topic: sensors
  qos: ''
  retain: ''
  broker: c38452a5.4f84e8
  x: 1140
  'y': 590
  wires: []
- id: 518d9a7198e9a4c9
  type: switch
  z: ec75ad2cb670e9c0
  name: Sort
  property: payload.type
  propertyType: msg
  rules:
    - t: eq
      v: temperature
      vt: str
    - t: eq
      v: humidity
      vt: str
    - t: eq
      v: pressure
      vt: str
    - t: else
  checkall: 'true'
  repair: false
  outputs: 4
  x: 710
  'y': 580
  wires:
    - - 51b1bc3751c94bf7
    - - 51b1bc3751c94bf7
    - - 51b1bc3751c94bf7
    - - 65f1413068738793
- id: 65f1413068738793
  type: debug
  z: ec75ad2cb670e9c0
  name: Not looked
  active: false
  tosidebar: true
  console: true
  tostatus: false
  complete: 'true'
  targetType: full
  statusVal: ''
  statusType: auto
  x: 930
  'y': 630
  wires: []
- id: e324eb60e5e0fd71
  type: function
  z: ec75ad2cb670e9c0
  name: Parse JeeLink
  func: |-
    // name: Parse JeeLink
    // outputs: 1
    var outputMsgs = []
    timestampH = new Date().toISOString()
    timestamp = new Date().getTime()

    var s = msg.payload.split(' ')
    if(s[0] === 'ROOM') {
        var type = ''
        var nodeid = parseInt(s[1])
        // var nodeid5 = ("00000" + nodeid).slice (-5)
        var entry = parseInt(s[2])
        var value = s[4].replace(/(\r\n|\n|\r)/gm,"");
        if(s[3] == 0) {
          type = 'temperature';
          value = value / 10;
        } else if(s[3] == 1) {
          type = 'humidity';
          value = value / 10;
        } else if(s[3] == 2) {
          type = 'pressure';
          value = value / 10;
        } else if(s[3] == 3) {
          type = 'light';
        } else if(s[3] == 4 && value !== 0) {
          type = 'battery';
          value = value / 100;
        } else if(s[3] == 5) {
          type = 'soil';
        } else if(s[3] == 6) {
          type = 'toggle';
          value = parseInt(value);
        }
        
        if(type !== '') {
            var msgJ = {}
            msgJ.topic = 'sensors/rfm868usb/nodes/' + nodeid + '/entries/' + entry + '/events/' + type;
            msgJ.payload = { 
                "gateway":"rfm868usb",
                "id": nodeid,
                "entry": entry,
                "type": type,
                "value": value,
                "timestamp": timestamp,
                "timestamp-human": timestampH
            }
            node.status({ fill:"blue", shape:"dot", text: msg.payload });
            outputMsgs.push(msgJ);
        } else {
          node.status({ fill:"red", shape:"dot", text: msg.payload });
        }
        
        //setTimeout(function() { this.status({}); }, 500);
        //this.status({fill:"green",shape:"dot",text:"processed"});
    }

    return [ outputMsgs ];
  outputs: 1
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 320
  'y': 480
  wires:
    - - 518d9a7198e9a4c9
      - 82feacacfc9ee30f
      - c28fe8ce0758bb68
- id: c28fe8ce0758bb68
  type: trigger
  z: ec75ad2cb670e9c0
  name: Watchdog
  op1: ''
  op2: ''
  op1type: nul
  op2type: pay
  duration: '1'
  extend: true
  overrideDelay: false
  units: hr
  reset: ''
  bytopic: topic
  topic: topic
  outputs: 1
  x: 520
  'y': 650
  wires:
    - - d10281f1d98eed79
- id: d10281f1d98eed79
  type: debug
  z: ec75ad2cb670e9c0
  name: JL W Debug
  active: true
  tosidebar: true
  console: false
  tostatus: false
  complete: 'true'
  targetType: full
  statusVal: ''
  statusType: auto
  x: 730
  'y': 650
  wires: []
- id: c794716e926bc4f8
  type: http request
  z: ec75ad2cb670e9c0
  name: Web Relays
  method: GET
  ret: obj
  paytoqs: ignore
  url: 'http://ioteleinfo.local/status'
  tls: ''
  persist: true
  proxy: ''
  insecureHTTPParser: false
  authType: ''
  senderr: false
  headers: []
  x: 350
  'y': 820
  wires:
    - - 845f7fc20572b666
      - 77617e95c29eac68
- id: 6b4bb63d1b2c2cdf
  type: inject
  z: ec75ad2cb670e9c0
  name: Poll Web Relays (60s)
  repeat: '60'
  crontab: ''
  once: false
  onceDelay: ''
  topic: ''
  payload: ''
  payloadType: str
  x: 140
  'y': 820
  wires:
    - - c794716e926bc4f8
- id: 292908d51b5eef4f
  type: mqtt out
  z: ec75ad2cb670e9c0
  name: sensors/xxx/nodes/...
  topic: ''
  qos: ''
  retain: ''
  broker: c38452a5.4f84e8
  x: 780
  'y': 810
  wires: []
- id: 845f7fc20572b666
  type: debug
  z: ec75ad2cb670e9c0
  name: WR-Debug-Poll
  active: false
  tosidebar: true
  console: false
  tostatus: false
  complete: payload
  targetType: msg
  statusVal: ''
  statusType: auto
  x: 540
  'y': 870
  wires: []
- id: 718f2cc1589da67f
  type: comment
  z: ec75ad2cb670e9c0
  name: Actors - MQTT push
  info: ''
  x: 120
  'y': 900
  wires: []
- id: cb0786eff7515a2a
  type: mqtt in
  z: ec75ad2cb670e9c0
  name: actors/iotheaters/switch
  topic: actors/iotheaters/switch
  qos: '2'
  datatype: json
  broker: c38452a5.4f84e8
  inputs: 0
  x: 130
  'y': 940
  wires:
    - - d2fe7bae3ec14024
- id: d2fe7bae3ec14024
  type: http request
  z: ec75ad2cb670e9c0
  name: Switch Web Relays
  method: GET
  ret: txt
  paytoqs: ignore
  url: 'http://ioteleinfo.local/relays/set?id={{{payload.id}}}&value=-1'
  tls: ''
  persist: false
  proxy: ''
  insecureHTTPParser: false
  authType: ''
  senderr: false
  headers: []
  x: 560
  'y': 940
  wires:
    - - 2c7df083710cb173
- id: 2c7df083710cb173
  type: debug
  z: ec75ad2cb670e9c0
  name: ''
  active: false
  console: 'false'
  complete: 'true'
  x: 790
  'y': 940
  wires: []
- id: 0ddd9271bf3c418f
  type: websocket in
  z: ec75ad2cb670e9c0
  name: WebRelay
  server: ''
  client: 7e89f6fe472270aa
  x: 90
  'y': 1110
  wires:
    - - 18f9bc805dacd963
      - 36e1445c396adeef
      - 7b7272b3f4dadcb7
      - 30f2aae70f48250d
- id: b43f2b600593f743
  type: switch
  z: ec75ad2cb670e9c0
  name: sensors value
  property: sensors
  propertyType: msg
  rules:
    - t: hask
      v: temperature
      vt: str
    - t: hask
      v: humidity
      vt: str
    - t: else
  checkall: 'true'
  repair: false
  outputs: 3
  x: 660
  'y': 1240
  wires:
    - - 9c35edae7a98631b
    - - 8b7eebac2a610c4f
    - []
- id: 9c35edae7a98631b
  type: function
  z: ec75ad2cb670e9c0
  name: Sensors-Temperature
  func: |-
    var msgres =  {
        payload: {
            topic: "teleinfo-temperature-wr-Garage",
            payload: [
                { "value": Number(msg.sensors.temperature) },
                { "type": "temperature", "location": "wr-Garage" }
            ],
            measurement: "sensors"
        }
    }

    return msgres;
  outputs: 1
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 940
  'y': 1240
  wires:
    - - 4f3f06d7be8ae294
- id: 8b7eebac2a610c4f
  type: function
  z: ec75ad2cb670e9c0
  name: Sensors-Humidity
  func: |-
    var msgres =  {
        payload: {
            topic: "teleinfo-humidity-wr-Garage",
            payload: [
                { "value": Number(msg.sensors.humidity) },
                { "type": "humidity", "location": "wr-Garage" }
            ],
            measurement: "sensors"
        }
    }

    return msgres;
  outputs: 1
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 930
  'y': 1280
  wires:
    - - 4f3f06d7be8ae294
- id: 18f9bc805dacd963
  type: debug
  z: ec75ad2cb670e9c0
  name: WR Debug
  active: false
  tosidebar: true
  console: false
  tostatus: false
  complete: 'true'
  targetType: full
  statusVal: ''
  statusType: auto
  x: 270
  'y': 1070
  wires: []
- id: bcf38e1a8e3a46a4
  type: debug
  z: ec75ad2cb670e9c0
  name: WR-SensorsDebug
  active: false
  tosidebar: true
  console: false
  tostatus: false
  complete: 'true'
  targetType: full
  statusVal: ''
  statusType: auto
  x: 670
  'y': 1290
  wires: []
- id: 36e1445c396adeef
  type: switch
  z: ec75ad2cb670e9c0
  name: relays
  property: relays
  propertyType: msg
  rules:
    - t: nnull
  checkall: 'true'
  repair: false
  outputs: 1
  x: 250
  'y': 1110
  wires:
    - - 3590f1c1c74c32e7
- id: f653a97136699a7b
  type: function
  z: ec75ad2cb670e9c0
  name: Relays-OnOff
  func: |-
    var msgres =  {
        payload: {
            payload: [
                { "value": Number(msg.payload.value) },
                { "type": "plug-onoff", "location": "wr-Garage-" + msg.payload.id }
            ],
            measurement: "sensors"
        }
    }

    return msgres;
  outputs: 1
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 980
  'y': 1110
  wires:
    - - edacb98cc2cf3239
- id: 81a50e6af370e5f6
  type: debug
  z: ec75ad2cb670e9c0
  name: WR-RelaysDebug
  active: false
  tosidebar: true
  console: false
  tostatus: false
  complete: 'true'
  targetType: full
  statusVal: ''
  statusType: auto
  x: 670
  'y': 1150
  wires: []
- id: 7b7272b3f4dadcb7
  type: switch
  z: ec75ad2cb670e9c0
  name: sensors
  property: sensors
  propertyType: msg
  rules:
    - t: nnull
  checkall: 'true'
  repair: false
  outputs: 1
  x: 260
  'y': 1150
  wires:
    - - 126b55a125fd205c
- id: 30f2aae70f48250d
  type: switch
  z: ec75ad2cb670e9c0
  name: teleinfo
  property: teleinfo
  propertyType: msg
  rules:
    - t: nnull
  checkall: 'true'
  repair: false
  outputs: 1
  x: 260
  'y': 1190
  wires:
    - - 8cdaa772fd602d38
- id: 8d698cc848f2a78a
  type: split
  z: ec75ad2cb670e9c0
  name: ''
  splt: \n
  spltType: str
  arraySplt: 1
  arraySpltType: len
  stream: false
  addname: ''
  x: 820
  'y': 1110
  wires:
    - - f653a97136699a7b
- id: 4f9db8945ed3ad9c
  type: change
  z: ec75ad2cb670e9c0
  name: keys
  rules:
    - t: set
      p: payload
      pt: msg
      to: relays
      tot: msg
      dc: true
  action: ''
  property: ''
  from: ''
  to: ''
  reg: false
  x: 630
  'y': 1110
  wires:
    - - 8d698cc848f2a78a
- id: 9feec7cce5e484f7
  type: debug
  z: ec75ad2cb670e9c0
  name: WR-TeleinfoDebug
  active: false
  tosidebar: true
  console: false
  tostatus: false
  complete: 'true'
  targetType: full
  statusVal: ''
  statusType: auto
  x: 670
  'y': 1440
  wires: []
- id: a8ad9ac1058063da
  type: debug
  z: ec75ad2cb670e9c0
  name: StorageDebug
  active: false
  tosidebar: true
  console: false
  tostatus: false
  complete: 'true'
  targetType: full
  statusVal: ''
  statusType: auto
  x: 1490
  'y': 1430
  wires: []
- id: 40224e0c1b893541
  type: mqtt in
  z: ec75ad2cb670e9c0
  name: actors/iotheaters/set
  topic: actors/iotheaters/set
  qos: '2'
  datatype: json
  broker: c38452a5.4f84e8
  nl: false
  rap: false
  inputs: 0
  x: 120
  'y': 990
  wires:
    - - 0f563e7c046d1d73
- id: c44483f4706eadf2
  type: debug
  z: ec75ad2cb670e9c0
  name: ''
  active: false
  console: 'false'
  complete: 'true'
  x: 790
  'y': 990
  wires: []
- id: 433fe1856e26da1f
  type: http request
  z: ec75ad2cb670e9c0
  name: Set Web Relays
  method: GET
  ret: txt
  paytoqs: ignore
  url: >-
    http://ioteleinfo.local/relays/set?id={{{payload.id}}}&state={{{payload.value}}}
  tls: ''
  persist: false
  proxy: ''
  insecureHTTPParser: false
  authType: ''
  senderr: false
  headers: []
  x: 550
  'y': 990
  wires:
    - - c44483f4706eadf2
- id: 0f563e7c046d1d73
  type: delay
  z: ec75ad2cb670e9c0
  name: ''
  pauseType: rate
  timeout: '500'
  timeoutUnits: milliseconds
  rate: '1'
  nbRateUnits: '0.1'
  rateUnits: second
  randomFirst: '1'
  randomLast: '5'
  randomUnits: seconds
  drop: false
  allowrate: false
  outputs: 1
  x: 340
  'y': 990
  wires:
    - - 433fe1856e26da1f
- id: 77617e95c29eac68
  type: function
  z: ec75ad2cb670e9c0
  name: Parse WebRelays
  func: |-
    // name: Parse web relays
    // outputs: 1
    var outputMsgs = []
    var displayMsg = ""
    var timestampH = new Date().toISOString()
    var timestamp = new Date().getTime()

    for (var i in msg.payload.relays) {
        
        let relayId = msg.payload.relays[i].id
        let relayDesc = msg.payload.relays[i].description
        let relayValue = msg.payload.relays[i].value
        let type = 'toggle'
        let entry = 0
        
        var msgS = {}
        msgS.topic = 'sensors/iotheaters/nodes/' + relayId + '/entries/' + entry + '/events/' + type;
        msgS.payload = { 
            "gateway":"iotheaters",
            "id": relayId,
            "entry": entry,
            "type": type,
            "value": relayValue,
            "timestamp": timestamp,
            "timestamp-human": timestampH
        }
        displayMsg += relayDesc + "(" + relayId + ")=" + relayValue + "; "
        outputMsgs.push(msgS);
    }

    node.status({ fill:"blue", shape:"dot", text: displayMsg });

    return [ outputMsgs ];
  outputs: 1
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 550
  'y': 810
  wires:
    - - 292908d51b5eef4f
- id: deee902d14d9f69f
  type: debug
  z: ec75ad2cb670e9c0
  name: WR W Debug
  active: false
  tosidebar: true
  console: false
  tostatus: false
  complete: 'true'
  targetType: full
  statusVal: ''
  statusType: auto
  x: 1290
  'y': 1260
  wires: []
- id: 993cf64deccadfaf
  type: split
  z: ec75ad2cb670e9c0
  name: ''
  splt: \n
  spltType: str
  arraySplt: 1
  arraySpltType: len
  stream: false
  addname: topic
  x: 760
  'y': 1400
  wires:
    - - d863057a25ab0896
      - be29ee5cf7174c69
- id: 4464a01f3af22ec2
  type: change
  z: ec75ad2cb670e9c0
  name: keys
  rules:
    - t: set
      p: payload
      pt: msg
      to: teleinfo
      tot: msg
      dc: true
  action: ''
  property: ''
  from: ''
  to: ''
  reg: false
  x: 630
  'y': 1400
  wires:
    - - 993cf64deccadfaf
- id: c25c5c35d9536f04
  type: link in
  z: ec75ad2cb670e9c0
  name: In-WS-Teleinfo
  links:
    - 8cdaa772fd602d38
  x: 535
  'y': 1400
  wires:
    - - 4464a01f3af22ec2
      - 9feec7cce5e484f7
- id: d87094764684cc41
  type: comment
  z: ec75ad2cb670e9c0
  name: Teleinfo Events
  info: ''
  x: 600
  'y': 1350
  wires: []
- id: 8cdaa772fd602d38
  type: link out
  z: ec75ad2cb670e9c0
  name: Out-WS-Teleinfo
  mode: link
  links:
    - c25c5c35d9536f04
  x: 415
  'y': 1190
  wires: []
- id: 0fb3e71c0ce56c0a
  type: switch
  z: ec75ad2cb670e9c0
  name: ''
  property: topic
  propertyType: msg
  rules:
    - t: cont
      v: BBRH
      vt: str
    - t: else
  checkall: 'false'
  repair: false
  outputs: 2
  x: 770
  'y': 1500
  wires:
    - - 214a7a3538c0f9d7
      - e20462ad11c24a6e
    - - e20462ad11c24a6e
- id: 62cbf3d2735867d5
  type: function
  z: ec75ad2cb670e9c0
  name: Insert X
  func: >-
    // sensors_value

    let fields = { "value": Number(msg.payload) }

    let tags =   { "type": "teleinfo-" + msg.topic, "location": "main" }


    var msgres1 =  {
        topic: "teleinfo-" + msg.topic,
        payload: {
            payload: [ fields, tags ],
            measurement: "sensors"
        }
    }


    // sensors_teleinfo_X

    let namedFieldName = "teleinfo_" + msg.topic

    let namedFields = { [namedFieldName]: Number(msg.payload) }

    var namedTags = { "location": "main" }


    var msgres2 = {
        topic: namedFieldName,
        payload: {
            payload: [namedFields, namedTags],
            measurement: "sensors"
        }
    }


    // live info

    node.status({ fill: "blue", shape: "dot", text: msg.topic + ": " +
    Number(msg.payload) });


    return [
        msgres1,
        msgres2
    ]
  outputs: 2
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 1280
  'y': 1620
  wires:
    - - 3a926826af10884b
    - - 3a926826af10884b
- id: 2824712821b59f6c
  type: function
  z: ec75ad2cb670e9c0
  name: IsNumeric
  func: |
    function isNumeric(n) { 
        return !isNaN(parseFloat(n)) && isFinite(n); 
    }

    // convert to numeric if possible
    if (isNumeric(msg.payload)) {
        node.status({ fill: "blue", shape: "dot", text: msg.topic + ": " + Number(msg.payload) });
        return { topic: msg.topic, payload: Number(msg.payload) }
    }
  outputs: 1
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 1140
  'y': 1620
  wires:
    - - 62cbf3d2735867d5
- id: 1d3b3214dcde0243
  type: comment
  z: ec75ad2cb670e9c0
  name: Sensors Events
  info: ''
  x: 600
  'y': 1190
  wires: []
- id: da439ed30df38b5b
  type: link in
  z: ec75ad2cb670e9c0
  name: In-WS-Sensors
  links:
    - 126b55a125fd205c
  x: 535
  'y': 1230
  wires:
    - - bcf38e1a8e3a46a4
      - b43f2b600593f743
- id: 126b55a125fd205c
  type: link out
  z: ec75ad2cb670e9c0
  name: Out-WS-Sensors
  mode: link
  links:
    - da439ed30df38b5b
  x: 415
  'y': 1150
  wires: []
- id: 30127bf3c7b49cde
  type: comment
  z: ec75ad2cb670e9c0
  name: Sensors Relays
  info: ''
  x: 600
  'y': 1070
  wires: []
- id: a0c7d1d54f89df2f
  type: link in
  z: ec75ad2cb670e9c0
  name: In-WS-Relays
  links:
    - 3590f1c1c74c32e7
  x: 535
  'y': 1110
  wires:
    - - 4f9db8945ed3ad9c
      - 81a50e6af370e5f6
- id: 3590f1c1c74c32e7
  type: link out
  z: ec75ad2cb670e9c0
  name: Out-WS-Relays
  mode: link
  links:
    - a0c7d1d54f89df2f
  x: 415
  'y': 1110
  wires: []
- id: d863057a25ab0896
  type: function
  z: ec75ad2cb670e9c0
  name: Global
  func: |-
    function isNumeric(n) {
        return !isNaN(parseFloat(n)) && isFinite(n);
    }

    // convert to numeric if possible
    if (isNumeric(msg.payload)) {
        msg.payload = Number(msg.payload)
    }

    global.set("tidhome_teleinfo." + msg.topic, msg.payload)
    return { topic: msg.topic, payload: msg.payload }
  outputs: 1
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 890
  'y': 1400
  wires:
    - - 0fb3e71c0ce56c0a
- id: edacb98cc2cf3239
  type: link out
  z: ec75ad2cb670e9c0
  name: link out 2
  mode: link
  links:
    - 8f74f3f76c223f4d
  x: 1435
  'y': 1130
  wires: []
- id: 19075162ee42791e
  type: function
  z: ec75ad2cb670e9c0
  name: Indexes Wh
  func: |-
    var periods = [
        "BBRHPJB",
        "BBRHCJB",
        "BBRHPJW",
        "BBRHCJW",
        "BBRHPJR",
        "BBRHCJR"
    ]

    let text = ""
    let teleinfoTotal = 0
    let fields = {}

    for(var period in periods) {
        // get index from memory
        let idxPeriod = Number(global.get("tidhome_teleinfo." + periods[period]))
        
        switch (periods[period]) {
            case "BBRHPJB":
                if (idxPeriod > 0) { 
                    // set DB index for an update
                    fields["teleinfo_" + periods[period]] = idxPeriod

                    fields["teleinfo_HCHP"] = idxPeriod
                }
                break
            case "BBRHCJB":
                if (idxPeriod > 0) { 
                    // set DB index for an update
                    fields["teleinfo_" + periods[period]] = idxPeriod

                    fields["teleinfo_HCHC"] = idxPeriod
                }
                break
            default:
                // set DB index for an update
                fields["teleinfo_" + periods[period]] = idxPeriod
                break
        }

        // compute total
        teleinfoTotal += idxPeriod
        // message for debug
        text += ((text.length > 0) ? " / " : "") + periods[period].substring(3) + ': ' + idxPeriod
    }

    // Index fields
    fields["teleinfo_Wh_Total"] = Number(teleinfoTotal)    

    let tags =   { "location": "main" }

    var msg =  {
        topic: "teleinfo",
        payload: {
            payload: [ fields, tags ],
            measurement: "sensors"
        }
    }

    node.status({ fill: "blue", shape: "dot", text: text });

    return msg
  outputs: 1
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 1000
  'y': 1470
  wires:
    - - e26a2cc5cb07a613
- id: d07cbbeeea4b6838
  type: debug
  z: ec75ad2cb670e9c0
  name: WR-Teleinfo-Periods-Debug
  active: false
  tosidebar: true
  console: false
  tostatus: false
  complete: 'true'
  targetType: full
  statusVal: ''
  statusType: auto
  x: 1200
  'y': 1580
  wires: []
- id: 02b328556dfff5f1
  type: function
  z: ec75ad2cb670e9c0
  name: int(PTEC)
  func: |-
    // update period as integer (1=HPJB, 2=HCJB, 3=HPJW, ...)
    let period = -1
    let topic = 'PTEC_int'
    if(msg.topic.startsWith('BBR')) {
        switch(msg.topic) {
            case 'BBRHPJB':
                period = 1
                break
            case 'BBRHCJB':
                period = 2
                break
            case 'BBRHPJW':
                period = 3
                break
            case 'BBRHCJW':
                period = 4
                break
            case 'BBRHPJR':
                period = 5
                break
            case 'BBRHCJR':
                period = 6
                break
        }

        if(period > 0) {
            global.set("tidhome_teleinfo." + topic, Number(period))

            return {
                topic: topic,
                payload: period
            }
        }
    }
  outputs: 1
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 990
  'y': 1520
  wires:
    - - e20462ad11c24a6e
- id: e26a2cc5cb07a613
  type: delay
  z: ec75ad2cb670e9c0
  name: 1 msg/m
  pauseType: timed
  timeout: '5'
  timeoutUnits: seconds
  rate: '1'
  nbRateUnits: '1'
  rateUnits: minute
  randomFirst: '1'
  randomLast: '5'
  randomUnits: seconds
  drop: true
  allowrate: false
  outputs: 1
  x: 1220
  'y': 1440
  wires:
    - - 3a926826af10884b
- id: be29ee5cf7174c69
  type: debug
  z: ec75ad2cb670e9c0
  name: WR-TeleinfoDebug
  active: false
  tosidebar: true
  console: false
  tostatus: false
  complete: 'true'
  targetType: full
  statusVal: ''
  statusType: auto
  x: 930
  'y': 1360
  wires: []
