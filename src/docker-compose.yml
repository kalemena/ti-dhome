
networks:
  default:

volumes:
  victoria-metrics-data:
  grafana-data:
  ha-config:

services:

  mqtt:
    image: eclipse-mosquitto:2.0.18
    restart: always
    ports:
      - 1883:1883
    volumes:
      - ./etc/mosquitto:/mosquitto/config:ro

  zigbee2mqtt:
    image: koenkk/zigbee2mqtt:1.35.1
    restart: always
    ports:
      - 8181
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./tidhome/data:/app/data
      - /run/udev:/run/udev:ro
    devices:
      - /dev/ttyACM0:/dev/ttyACM0
    privileged: true
    environment:
      - TZ=${TZ}
      #Â - DEBUG=zigbee-herdsman*
    networks:
      default:
        aliases:
          - zigbee2mqtt.tidhome.local

  victoriametrics:
    image: victoriametrics/victoria-metrics:v1.87.13
    restart: always
    ports:
      - 8428:8428
    volumes:
      - victoria-metrics-data:/victoria-metrics-data
      - ./etc/victoria-metrics/prometheus.yml:/etc/victoria-metrics/prometheus.yml
    command:
      - "--retentionPeriod=3y"
      # - "--storageDataPath=/storage"
      - "--promscrape.config=/etc/victoria-metrics/prometheus.yml"
      - "--promscrape.config.strictParse=false"
    extra_hosts:
      opendtu: ${IOT_OPENDTU_IP}

  nodered:
    build: 
      context: .
      dockerfile: Dockerfile.official
      args:
        NODERED_VERSION: 3.1.4
    restart: always
    ports:
      - 1880:1880
    volumes:
      - ./etc/nodered/data:/data
      - ./etc/tidhome:/etc/tidhome
      - /var/log/nodered:/var/log/nodered
    devices:
     - "/dev/ttyCurrenCost:/dev/ttyCurrenCost"
     - "/dev/ttyJeeLink:/dev/ttyJeeLink"
    env_file:
     - .env
    networks:
      default:
        aliases:
          - nodered.tidhome.local
    extra_hosts:
      ioteleinfo.local: ${IOT_WEBRELAY_IP}

  telegraf:
    image: telegraf:1.30.0
    # network_mode: host
    hostname: telegraf
    restart: always
    user: ${TELEGRAF_USER}
    volumes:
      - ./etc/telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /sys:/rootfs/sys:ro
      - /proc:/rootfs/proc:ro
      - /etc:/rootfs/etc:ro      
    environment:
      HOST_PROC: /rootfs/proc
      HOST_SYS: /rootfs/sys
      HOST_ETC: /rootfs/etc

  grafana:
    image: grafana/grafana:9.4.17
    restart: always
    ports:
      - "3000:3000"
    volumes:
      # - ./etc/grafana:/etc/grafana
      # - ./var/lib/grafana:/var/lib/grafana
      # - ./var/log/grafana:/var/log/grafana
      - grafana-data:/var/lib/grafana
      - ./etc/grafana/provisioning/:/etc/grafana/provisioning/
      - ./etc/grafana/canvas/:/usr/share/grafana/public/img/bg/:ro
    environment:
      GF_SECURITY_ADMIN_USER: ${GRAFANA_ADMIN_USER:-default}
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_ADMIN_PASSWORD:-password}
      GF_INSTALL_PLUGINS: grafana-polystat-panel,volkovlabs-echarts-panel
      GF_DASHBOARDS_DEFAULT_HOME_DASHBOARD_PATH: /etc/grafana/provisioning/dashboards/Tidhome-Power.json
      GF_FEATURE_TOGGLES_ENABLE: topnav,newPanelChromeUI
    env_file:
      - .env

  homeassistant:
    image: homeassistant/home-assistant:stable
    environment:
      - TZ=Europe/Paris
    ports:
      - 8123:8123
    volumes:
      - ha-config:/config
      - /etc/localtime:/etc/localtime:ro
    restart: always

  # https://github.com/CausticLab/hass-configurator-docker
  hass-configurator:
    image: "causticlab/hass-configurator-docker"
    restart: unless-stopped
    ports:
      - "3218:3218/tcp"
    depends_on:
      - homeassistant
    volumes:
      - ./etc/homeassistant/configurator/config:/config
      - ha-config:/hass-config

  gateway:
    image: nginx
    restart: always
    ports:
     - "80:80"
    volumes:
     - ./etc/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
     - ./etc/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
     - ./usr/share/nginx/html:/usr/share/nginx/html
     # - /var/log/nginx:/var/log/nginx
    extra_hosts:
      ioteleinfo.local: ${IOT_WEBRELAY_IP}
