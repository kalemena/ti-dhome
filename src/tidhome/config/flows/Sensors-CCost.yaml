- id: f96b3a53.67de8
  type: tab
  label: Sensors-CCost
  disabled: false
  info: ''
- id: 81a1739b.736d1
  type: serial in
  z: f96b3a53.67de8
  name: CurrentCost
  serial: 36396f66.41717
  x: 110
  'y': 120
  wires:
    - - e9003ce.5c1f84
- id: e9003ce.5c1f84
  type: xml
  z: f96b3a53.67de8
  name: xml2json
  property: payload
  attr: ''
  chr: ''
  x: 210
  'y': 160
  wires:
    - - 1da3548.6a44bac
- id: 57c57a10.955624
  type: mqtt out
  z: f96b3a53.67de8
  name: sensors/xxx/nodes/...
  topic: ''
  qos: ''
  retain: ''
  broker: c38452a5.4f84e8
  x: 1060
  'y': 110
  wires: []
- id: a44c6fd5.e88c1
  type: catch
  z: f96b3a53.67de8
  name: ''
  scope: null
  uncaught: false
  x: 100
  'y': 80
  wires:
    - - 4a641f47.46cb08
- id: 4a641f47.46cb08
  type: link out
  z: f96b3a53.67de8
  name: General CatchAll
  links:
    - 1bf42829.b3e0b8
  x: 255
  'y': 80
  wires: []
- id: ef7af4f7.f7274
  type: debug
  z: f96b3a53.67de8
  name: CCDebug
  active: false
  tosidebar: true
  console: false
  tostatus: false
  complete: 'true'
  targetType: full
  statusVal: ''
  statusType: auto
  x: 1000
  'y': 190
  wires: []
- id: b378c436.6d3a5
  type: function
  z: f96b3a53.67de8
  name: power-inst
  func: |-
    var msgres =  {
        payload: {
            payload: [
                { "value": Number(msg.payload.value) },
                { "type": "power-inst", "location": msg.payload.name }
            ],
            measurement: "sensors"
        }
    }

    return msgres;
  outputs: 1
  noerr: 0
  initialize: ''
  finalize: ''
  x: 1170
  'y': 230
  wires:
    - - 6166ef2d.f866f8
- id: 6166ef2d.f866f8
  type: mqtt out
  z: f96b3a53.67de8
  name: sensors
  topic: sensors
  qos: ''
  retain: ''
  broker: c38452a5.4f84e8
  x: 1340
  'y': 230
  wires: []
- id: 99e6cd73.0c8e88
  type: switch
  z: f96b3a53.67de8
  name: ''
  property: payload.type
  propertyType: msg
  rules:
    - t: eq
      v: watts
      vt: str
    - t: eq
      v: temperature
      vt: str
    - t: else
  checkall: 'true'
  repair: false
  outputs: 3
  x: 990
  'y': 240
  wires:
    - - b378c436.6d3a5
    - - 23acd2ce.970c6e
    - - 6db06cf3.4bc614
- id: 65932785.3642e
  type: function
  z: f96b3a53.67de8
  name: Friendly name
  func: |-
    var tidhome = global.get("tidhome") || {}
    sensors = tidhome.sensors || {}
    currsnetcostNodes = sensors.currentcost.nodes || {}

    let i = 0;
    let len = currsnetcostNodes.length;
    for (; i < len; ) {
      if(currsnetcostNodes[i].id === msg.payload.id) {
        msg.payload.name = "cc-" + msg.payload.id + "-" + currsnetcostNodes[i].location || "Unknown"
      }
      i++;
    } 

    // pass through
    return msg;
  outputs: 1
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 790
  'y': 210
  wires:
    - - ef7af4f7.f7274
      - 99e6cd73.0c8e88
- id: 6db06cf3.4bc614
  type: debug
  z: f96b3a53.67de8
  name: CCDebug
  active: false
  tosidebar: true
  console: false
  tostatus: false
  complete: 'true'
  targetType: full
  statusVal: ''
  statusType: auto
  x: 1160
  'y': 310
  wires: []
- id: 23acd2ce.970c6e
  type: function
  z: f96b3a53.67de8
  name: temperature
  func: |-
    var msgres =  {
        payload: {
            payload: [
                { "value": Number(msg.payload.value) },
                { "type": "temperature", "location": "cc-Bureau" }
            ],
            measurement: "sensors"
        }
    }

    return msgres;
  outputs: 1
  noerr: 0
  initialize: ''
  finalize: ''
  x: 1170
  'y': 270
  wires:
    - - 6166ef2d.f866f8
- id: 7e7b6653.045208
  type: debug
  z: f96b3a53.67de8
  name: CCDebug
  active: false
  tosidebar: true
  console: false
  tostatus: false
  complete: 'true'
  targetType: full
  statusVal: ''
  statusType: auto
  x: 500
  'y': 330
  wires: []
- id: 1da3548.6a44bac
  type: switch
  z: f96b3a53.67de8
  name: ''
  property: 'payload.msg.type[0]'
  propertyType: msg
  rules:
    - t: eq
      v: '1'
      vt: str
    - t: eq
      v: '2'
      vt: str
    - t: else
  checkall: 'true'
  repair: false
  outputs: 3
  x: 340
  'y': 120
  wires:
    - - 75611bae5888eb02
    - - 5e8cddc7.be4dec
    - - 7e7b6653.045208
- id: 5e8cddc7.be4dec
  type: debug
  z: f96b3a53.67de8
  name: CCDebug
  active: false
  tosidebar: true
  console: false
  tostatus: false
  complete: 'true'
  targetType: full
  statusVal: ''
  statusType: auto
  x: 500
  'y': 290
  wires: []
- id: 75611bae5888eb02
  type: function
  z: f96b3a53.67de8
  name: 'sensor Type, "1" = electricity'
  func: >-
    // name: Parse CurrentCost

    // outputs: 1

    var outputMsgs = []

    timestampH = new Date().toISOString()

    timestamp = new Date().getTime()


    // temperature

    if(msg.payload.msg.tmpr != undefined && msg.payload.msg.sensor[0] == '1') {
        // sensors/iotpower/nodes/1/entries/1/events/temperature
        type = 'temperature'
        nodeid = 1 // Bureau
        entry = 1
        value = msg.payload.msg.tmpr[0]
        
        var msgT = {}
        msgT.topic = 'sensors/iotpower/nodes/' + nodeid + '/entries/' + entry + '/events/' + type;
        msgT.payload = { 
            "gateway":"iotpower",
            "id": nodeid,
            "entry": entry,
            "type": type,
            "value": parseFloat(value),
            "timestamp": timestamp,
            "timestamp-human": timestampH
        }
        displayMsg = msgT.payload.id + "/" + msgT.payload.type + "=" + msgT.payload.value
        node.status({ fill:"orange", shape:"dot", text: displayMsg });
        outputMsgs.push(msgT);
        // node.warn("CC event temp:\n" + JSON.stringify(msgT))
    }


    // Live power

    if(msg.payload.msg.sensor != undefined && msg.payload.msg.sensor[0] !=
    undefined) {
        // sensors/iotpower/nodes/.../entries/0/events/watts
        type = 'watts'
        nodeid = parseInt(msg.payload.msg.sensor[0])
        entry = 0
        value = msg.payload.msg.ch1[0].watts[0]
        
        var msgP = {}
        msgP.topic = 'sensors/iotpower/nodes/' + nodeid + '/entries/' + entry + '/events/' + type;
        msgP.payload = { 
            "gateway":"iotpower",
            "id": nodeid,
            "entry": entry,
            "type": type,
            "value": parseFloat(value),
            "timestamp": timestamp,
            "timestamp-human": timestampH
        }
        displayMsg = msgP.payload.id + "/" + msgP.payload.type + "=" + msgP.payload.value
        node.status({ fill:"blue", shape:"dot", text: displayMsg });
        outputMsgs.push(msgP);
        // node.warn("CC event:\n" + JSON.stringify(msg))
    }


    /*

    // History power

    for (var i in msg.payload.msg.hist[0].data) {
        var chunk = msg.payload.msg.hist[0].data[i];
        var chunkClean = {};
        for (var j in chunk) {
            chunkClean[j] = chunk[j][0];
        }
        var topic = 'sensors/03967/entries/' + chunk.sensor[0] + '/history/power';
        outputMsgs.push( { topic:topic, payload: chunkClean });
    }

    */


    return [ outputMsgs ];
  outputs: 1
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 560
  'y': 70
  wires:
    - - 57c57a10.955624
      - 65932785.3642e
      - d44841c75e0acc24
- id: d44841c75e0acc24
  type: trigger
  z: f96b3a53.67de8
  name: Watchdog
  op1: ''
  op2: ''
  op1type: nul
  op2type: pay
  duration: '60'
  extend: true
  overrideDelay: false
  units: s
  reset: ''
  bytopic: topic
  topic: topic
  outputs: 1
  x: 1020
  'y': 50
  wires:
    - - 92124dd055692a09
- id: 92124dd055692a09
  type: debug
  z: f96b3a53.67de8
  name: ''
  active: true
  tosidebar: true
  console: false
  tostatus: false
  complete: 'true'
  targetType: full
  statusVal: ''
  statusType: auto
  x: 1190
  'y': 50
  wires: []
