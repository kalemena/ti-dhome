- id: d88a69c4.1942c8
  type: tab
  label: DB
  disabled: false
  info: ''
- id: ed8532c35449ea5d
  type: junction
  z: d88a69c4.1942c8
  x: 240
  'y': 320
  wires:
    - - 7e3ea563.cfecfc
      - 2b444ab.4ee2eb6
- id: 994a7a64bc1c7656
  type: junction
  z: d88a69c4.1942c8
  x: 100
  'y': 970
  wires:
    - - '9581410703628258'
      - 6e5458755ca35f1b
      - 9147ca10781b15f4
- id: 204ba00bb6a13bac
  type: junction
  z: d88a69c4.1942c8
  x: 360
  'y': 1010
  wires:
    - - cc2f0f7f0427b58c
- id: cc675ec4.106d
  type: comment
  z: d88a69c4.1942c8
  name: Sensors - Heaters/Power/RFM868
  info: ''
  x: 180
  'y': 120
  wires: []
- id: 90d304a9.c871a
  type: mqtt in
  z: d88a69c4.1942c8
  name: sensors/#
  topic: sensors/#
  qos: '2'
  datatype: json
  broker: c38452a5.4f84e8
  inputs: 0
  x: 100
  'y': 160
  wires:
    - - dcd509f1.d56dd
- id: 14def27.355280e
  type: debug
  z: d88a69c4.1942c8
  name: Debug
  active: false
  tosidebar: true
  console: true
  tostatus: false
  complete: 'true'
  targetType: full
  x: 420
  'y': 160
  wires: []
- id: dcd509f1.d56dd
  type: function
  z: d88a69c4.1942c8
  name: Store Global
  func: |-
    var topicNodesPrefix = 'tidhome.sensors.' + msg.payload.gateway + '.nodes'
    var nodes = global.get(topicNodesPrefix) || [];
    for (var i = 0; i < nodes.length; i++) {
        if(nodes[i].id === msg.payload.id) {
            // found node
            let entryStr = (msg.payload.entry != undefined) ? ('-' + msg.payload.entry) : ''
            global.set(topicNodesPrefix + '[' + i + '].' + msg.payload.type + entryStr, msg.payload.value);
            global.set(topicNodesPrefix + '[' + i + '].timestamp', msg.payload.timestamp);
        }
    }
    // pass through
    return msg;
  outputs: 1
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 260
  'y': 160
  wires:
    - - 14def27.355280e
- id: 694da039.ceca8
  type: catch
  z: d88a69c4.1942c8
  name: ''
  scope: null
  uncaught: false
  x: 100
  'y': 80
  wires:
    - - 950a0758.599f88
- id: 950a0758.599f88
  type: link out
  z: d88a69c4.1942c8
  name: General CatchAll
  links:
    - 1bf42829.b3e0b8
  x: 255
  'y': 80
  wires: []
- id: 716819cb.d00088
  type: comment
  z: d88a69c4.1942c8
  name: insert - events
  info: ''
  x: 110
  'y': 260
  wires: []
- id: bf874566.5d9478
  type: influxdb out
  z: d88a69c4.1942c8
  influxdb: ab73d852ece55e2a
  name: ''
  measurement: ''
  precision: ''
  retentionPolicy: ''
  database: ''
  retentionPolicyV18Flux: ''
  org: ''
  bucket: ''
  x: 540
  'y': 300
  wires: []
- id: 2b444ab.4ee2eb6
  type: debug
  z: d88a69c4.1942c8
  name: ''
  active: false
  tosidebar: true
  console: false
  tostatus: false
  complete: 'true'
  targetType: full
  statusVal: ''
  statusType: auto
  x: 330
  'y': 350
  wires: []
- id: 363803a4.b81044
  type: mqtt in
  z: d88a69c4.1942c8
  name: sensors
  topic: sensors
  qos: '2'
  datatype: json
  broker: c38452a5.4f84e8
  nl: false
  rap: false
  inputs: 0
  x: 90
  'y': 300
  wires:
    - - ed8532c35449ea5d
- id: 7e3ea563.cfecfc
  type: function
  z: d88a69c4.1942c8
  name: Wrap
  func: |
    var msgres = msg.payload
    return msgres;
  outputs: 1
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 330
  'y': 300
  wires:
    - - bf874566.5d9478
      - 1dcfd422.bd14fc
      - 5aec7656638b8a7b
- id: 1dcfd422.bd14fc
  type: debug
  z: d88a69c4.1942c8
  name: ''
  active: false
  tosidebar: true
  console: false
  tostatus: false
  complete: 'true'
  targetType: full
  statusVal: ''
  statusType: auto
  x: 510
  'y': 340
  wires: []
- id: 5aec7656638b8a7b
  type: influxdb out
  z: d88a69c4.1942c8
  influxdb: 786c015f0b3c18d1
  name: ''
  measurement: ''
  precision: ''
  retentionPolicy: ''
  database: ''
  retentionPolicyV18Flux: ''
  org: ''
  bucket: ''
  x: 550
  'y': 260
  wires: []
- id: e72a9a6d97ae5b4a
  type: link in
  z: d88a69c4.1942c8
  name: DB-Insert
  links:
    - 78c90ae53c32e0c1
    - 217fc7c76bf682ea
    - bd608bdcef55352f
  x: 125
  'y': 350
  wires:
    - - ed8532c35449ea5d
- id: c7ee104a98cf18f3
  type: moment
  z: d88a69c4.1942c8
  name: Parse Epoch
  topic: ''
  input: payload.timestamp
  inputType: msg
  inTz: Europe/Paris
  adjAmount: 0
  adjType: days
  adjDir: add
  format: YYYY-MM-DD
  locale: POSIX
  output: payload.isoDate
  outputType: msg
  outTz: Europe/Paris
  x: 430
  'y': 710
  wires:
    - - 2366bd1e3e03afb8
      - b3652a8e55e370f4
      - b4b61009fc7b0feb
- id: 2366bd1e3e03afb8
  type: function
  z: d88a69c4.1942c8
  name: Tempo
  func: >-
    msg.topic = "tempo"


    var datesTempo = global.get("edf.tempo")


    if (datesTempo[msg.payload.isoDate] != undefined) {
        msg.payload.color = datesTempo[msg.payload.isoDate].color
    } else {
        msg.payload.color = 'blue'
    }


    global.set('edf.tempo.colors.' + msg.payload.color, 1);


    switch (msg.payload.period) {

        case 'HC':

            switch (msg.payload.color) {
                case "blue":
                    msg.payload.costUnit = Number(0.0970)
                    break;

                case "white":
                    msg.payload.costUnit = Number(0.1140)
                    break;

                case 'red':
                    msg.payload.costUnit = Number(0.1216)
                    break;
            }        
            
            break;

        case 'HP':

            switch (msg.payload.color) {
                case "blue":
                    msg.payload.costUnit = Number(0.1249)
                    break;

                case "white":
                    msg.payload.costUnit = Number(0.1508)
                    break;

                case 'red':
                    msg.payload.costUnit = Number(0.6712)
                    break;
            }

            break;    
    }


    global.set('edf.tempo.colors.' + msg.payload.color + "-" +
    msg.payload.period, msg.payload.costUnit);


    msg.payload.cost = msg.payload.costUnit * Number(msg.payload.value) / 1000


    return msg;
  outputs: 1
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 610
  'y': 710
  wires:
    - - 7733c07030c21098
- id: 3bee84a27e6cd59c
  type: function
  z: d88a69c4.1942c8
  name: scroll energy
  func: |-

    // Trigger as many as days
    //for (var dayEnergy in msg.payload.data.result[0].values) {
    for (var j = 0; j < msg.payload.data.result[0].values.length; j++) {
        let dayData = msg.payload.data.result[0].values[j]
        node.send(
            [
                { 
                    payload: {
                        timestamp: dayData[0] * 1000,
                        value: Number(dayData[1]),
                        period: msg.period
                    }
                }
            ]);
    }

    return null;
  outputs: 1
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 240
  'y': 710
  wires:
    - - c7ee104a98cf18f3
- id: 7733c07030c21098
  type: Topic Frequencies
  z: d88a69c4.1942c8
  name: Freqs
  units: hours
  interval: 1
  reportUnits: minutes
  reportInterval: 1
  topicKey: topic
  valueKey: payload.cost
  alignToClock: true
  generator: internal
  x: 820
  'y': 750
  wires:
    - - ab9d4b85d889183c
      - fbbf19c3b6f8e430
    - []
- id: b3652a8e55e370f4
  type: function
  z: d88a69c4.1942c8
  name: HC/HP
  func: |-
    msg.topic = "hchp"

    switch (msg.payload.period) {
        case 'HC':
            msg.payload.costUnit = Number(0.1615)
            break;

        case 'HP':
            msg.payload.costUnit = Number(0.2228)
            break;    
    }

    msg.payload.cost = msg.payload.costUnit * Number(msg.payload.value) / 1000

    return msg;
  outputs: 1
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 620
  'y': 750
  wires:
    - - 7733c07030c21098
- id: b4b61009fc7b0feb
  type: function
  z: d88a69c4.1942c8
  name: Base
  func: |-
    msg.topic = "base"
    msg.payload.costUnit = Number(0.2062)
    msg.payload.cost = msg.payload.costUnit * Number(msg.payload.value) / 1000

    return msg;
  outputs: 1
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 610
  'y': 790
  wires:
    - - 7733c07030c21098
- id: 9aa81642091a436b
  type: inject
  z: d88a69c4.1942c8
  name: Init
  props: []
  repeat: ''
  crontab: ''
  once: true
  onceDelay: 0.1
  topic: ''
  x: 90
  'y': 470
  wires:
    - - f4df2ed060031650
      - a5ea9f561f8a2b2a
      - 432439ee8b7f21ec
- id: f4df2ed060031650
  type: file in
  z: d88a69c4.1942c8
  name: EDF - Tempo 2022
  filename: /etc/tidhome/EDF-Tempo-2022.csv
  filenameType: str
  format: utf8
  chunk: false
  sendError: false
  encoding: utf8
  allProps: false
  x: 300
  'y': 470
  wires:
    - - 302e9d35b9f224cd
- id: 302e9d35b9f224cd
  type: csv
  z: d88a69c4.1942c8
  name: ''
  sep: ','
  hdrin: true
  hdrout: ''
  multi: mult
  ret: \n
  temp: ''
  skip: '0'
  strings: true
  include_empty_strings: false
  include_null_values: false
  x: 470
  'y': 470
  wires:
    - - 598f547a1ac99cb2
- id: eb9dbd2cca4b2e93
  type: debug
  z: d88a69c4.1942c8
  name: Config-EDF
  active: false
  tosidebar: true
  console: false
  tostatus: false
  complete: 'true'
  targetType: full
  statusVal: ''
  statusType: auto
  x: 790
  'y': 550
  wires: []
- id: 598f547a1ac99cb2
  type: function
  z: d88a69c4.1942c8
  name: store global
  func: |-

    for (var j = 0; j < msg.payload.length; j++) {
        let dayData = msg.payload[j]
        global.set('edf.tempo.' + dayData.date, dayData);
    }

    return null;
  outputs: 1
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 610
  'y': 470
  wires:
    - - eb9dbd2cca4b2e93
- id: a5ea9f561f8a2b2a
  type: change
  z: d88a69c4.1942c8
  name: store facts
  rules:
    - t: set
      p: edf.costs.base
      pt: global
      to: '20.62'
      tot: num
    - t: set
      p: edf.costs.hc
      pt: global
      to: '16.15'
      tot: num
    - t: set
      p: edf.costs.hp
      pt: global
      to: '22.28'
      tot: num
    - t: set
      p: edf.tempo.colors
      pt: global
      to: '{"blue":0,"white":0,"red":0}'
      tot: json
  action: ''
  property: ''
  from: ''
  to: ''
  reg: false
  x: 280
  'y': 550
  wires:
    - - eb9dbd2cca4b2e93
- id: 3c9ba4b57c4a6219
  type: comment
  z: d88a69c4.1942c8
  name: Mathematics - power
  info: ''
  x: 130
  'y': 420
  wires: []
- id: 432439ee8b7f21ec
  type: file in
  z: d88a69c4.1942c8
  name: EDF - Tempo 2023
  filename: /etc/tidhome/EDF-Tempo-2023.csv
  filenameType: str
  format: utf8
  chunk: false
  sendError: false
  encoding: utf8
  allProps: false
  x: 300
  'y': 510
  wires:
    - - 302e9d35b9f224cd
- id: 1eb90a76313ade10
  type: comment
  z: d88a69c4.1942c8
  name: 'Mathematics - power - formula #1 - query_range'
  info: ''
  x: 220
  'y': 630
  wires: []
- id: '9581410703628258'
  type: function
  z: d88a69c4.1942c8
  name: Base
  func: |-
    msg.topic = "base"
    msg.costUnit = Number(0.2062)

    if (msg.payload.data.result[0].values.length > 0) {
        let dayData = msg.payload.data.result[0].values[0]
        let daykWh = Number(dayData[1])

        let dayCost = msg.costUnit * daykWh

        return {
            cost: dayCost,
            topic: msg.topic
        }
    }

    return null
  outputs: 1
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 220
  'y': 970
  wires:
    - - 204ba00bb6a13bac
- id: ab9d4b85d889183c
  type: debug
  z: d88a69c4.1942c8
  name: 'Debug #1'
  active: true
  tosidebar: true
  console: false
  tostatus: false
  complete: 'true'
  targetType: full
  statusVal: ''
  statusType: auto
  x: 980
  'y': 750
  wires: []
- id: 61321c793b31fe9b
  type: http request
  z: d88a69c4.1942c8
  name: Fetch DB
  method: GET
  ret: obj
  paytoqs: ignore
  url: ''
  tls: ''
  persist: false
  proxy: ''
  insecureHTTPParser: false
  authType: ''
  senderr: false
  headers: []
  x: 560
  'y': 670
  wires:
    - - 3bee84a27e6cd59c
      - b9eaf33614dd786a
- id: b9eaf33614dd786a
  type: debug
  z: d88a69c4.1942c8
  name: 'Debug Fetch #1'
  active: false
  tosidebar: true
  console: false
  tostatus: false
  complete: 'true'
  targetType: full
  statusVal: ''
  statusType: auto
  x: 740
  'y': 670
  wires: []
- id: 6e5458755ca35f1b
  type: function
  z: d88a69c4.1942c8
  name: HC/HP
  func: |-
    msg.topic = "hchp"

    switch (msg.period) {
        case 'HC':
            msg.costUnit = Number(0.1615)
            break;

        case 'HP':
            msg.costUnit = Number(0.2228)
            break;    
    }

    if (msg.payload.data.result[0].values.length > 0) {
        let dayData = msg.payload.data.result[0].values[0]
        let daykWh = Number(dayData[1])

        let dayCost = msg.costUnit * daykWh

        return {
            cost: dayCost,
            topic: msg.topic
        }
    }

    return null
  outputs: 1
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 230
  'y': 1010
  wires:
    - - 204ba00bb6a13bac
- id: 9147ca10781b15f4
  type: function
  z: d88a69c4.1942c8
  name: Tempo
  func: >-
    msg.topic = "tempo"


    var datesTempo = global.get("edf.tempo")


    if (datesTempo[msg.dateISO] != undefined) {
        msg.color = datesTempo[msg.dateISO].color
    } else {
        msg.color = 'blue'
    }


    switch (msg.period) {

        case 'HC':

            switch (msg.color) {
                case "blue":
                    msg.costUnit = Number(0.0970)
                    break;

                case "white":
                    msg.costUnit = Number(0.1140)
                    break;

                case 'red':
                    msg.costUnit = Number(0.1216)
                    break;
            }        
            
            break;

        case 'HP':

            switch (msg.color) {
                case "blue":
                    msg.costUnit = Number(0.1249)
                    break;

                case "white":
                    msg.costUnit = Number(0.1508)
                    break;

                case 'red':
                    msg.costUnit = Number(0.6712)
                    break;
            }

            break;    
    }


    global.set('edf.tempo.colors.' + msg.color + "-" + msg.period,
    msg.costUnit);


    if (msg.payload.data.result[0].values.length > 0) {
        let dayData = msg.payload.data.result[0].values[0]
        let daykWh = Number(dayData[1])

        let dayCost = msg.costUnit * daykWh

        return {
            cost: dayCost,
            topic: msg.topic
        }
    }


    return null
  outputs: 1
  noerr: 0
  initialize: ''
  finalize: ''
  libs: []
  x: 220
  'y': 1050
  wires:
    - - 204ba00bb6a13bac
- id: fbbf19c3b6f8e430
  type: change
  z: d88a69c4.1942c8
  name: ''
  rules:
    - t: set
      p: edf.costs.formula1
      pt: global
      to: topics
      tot: msg
      dc: true
  action: ''
  property: ''
  from: ''
  to: ''
  reg: false
  x: 1040
  'y': 800
  wires:
    - []
