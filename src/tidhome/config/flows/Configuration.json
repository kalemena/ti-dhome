[
  {
    "id": "112e9cf8.590b23",
    "type": "tab",
    "label": "Configuration",
    "disabled": false,
    "info": ""
  },
  {
    "id": "f26be183.4f807",
    "type": "inject",
    "z": "112e9cf8.590b23",
    "name": "Initialize",
    "repeat": "",
    "crontab": "",
    "once": true,
    "onceDelay": "1",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 100,
    "y": 300,
    "wires": [
      [
        "94e381cf.c2bab"
      ]
    ]
  },
  {
    "id": "af26e828.9b92",
    "type": "debug",
    "z": "112e9cf8.590b23",
    "name": "Debug",
    "active": true,
    "tosidebar": true,
    "console": true,
    "tostatus": false,
    "complete": "true",
    "targetType": "full",
    "x": 870,
    "y": 320,
    "wires": []
  },
  {
    "id": "77ded097.d4bc6",
    "type": "yaml",
    "z": "112e9cf8.590b23",
    "property": "payload",
    "name": "",
    "x": 460,
    "y": 300,
    "wires": [
      [
        "87655eff.6eacc"
      ]
    ]
  },
  {
    "id": "94e381cf.c2bab",
    "type": "file in",
    "z": "112e9cf8.590b23",
    "name": "ti-dhome.yaml",
    "filename": "/etc/tidhome/ti-dhome.yaml",
    "format": "utf8",
    "chunk": false,
    "sendError": false,
    "x": 290,
    "y": 300,
    "wires": [
      [
        "77ded097.d4bc6"
      ]
    ]
  },
  {
    "id": "ea98f666.7ddaa",
    "type": "comment",
    "z": "112e9cf8.590b23",
    "name": "Sensors - Configuration",
    "info": "",
    "x": 140,
    "y": 260,
    "wires": []
  },
  {
    "id": "d4efc750.434898",
    "type": "catch",
    "z": "112e9cf8.590b23",
    "name": "",
    "scope": null,
    "uncaught": false,
    "x": 100,
    "y": 80,
    "wires": [
      [
        "a24eb884.8fa9a"
      ]
    ]
  },
  {
    "id": "87655eff.6eacc",
    "type": "change",
    "z": "112e9cf8.590b23",
    "name": "",
    "rules": [
      {
        "t": "set",
        "p": "tidhome",
        "pt": "global",
        "to": "payload",
        "tot": "msg"
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 630,
    "y": 300,
    "wires": [
      [
        "af26e828.9b92"
      ]
    ]
  },
  {
    "id": "d18b1e8a.48615",
    "type": "change",
    "z": "112e9cf8.590b23",
    "name": "",
    "rules": [
      {
        "t": "set",
        "p": "payload",
        "pt": "msg",
        "to": "tidhome",
        "tot": "global"
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 620,
    "y": 340,
    "wires": [
      [
        "af26e828.9b92"
      ]
    ]
  },
  {
    "id": "9e12968e.6ff6b8",
    "type": "inject",
    "z": "112e9cf8.590b23",
    "name": "Check",
    "repeat": "",
    "crontab": "",
    "once": false,
    "onceDelay": "1",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "x": 90,
    "y": 340,
    "wires": [
      [
        "d18b1e8a.48615"
      ]
    ]
  },
  {
    "id": "aa1dfa0a.c912b",
    "type": "inject",
    "z": "112e9cf8.590b23",
    "name": "Alarms",
    "repeat": "3600",
    "crontab": "",
    "once": true,
    "onceDelay": "900",
    "topic": "",
    "payload": "[\"iotpower\",\"iotheaters\",\"rfm868usb\"]",
    "payloadType": "json",
    "x": 100,
    "y": 380,
    "wires": [
      [
        "9bca5b14.acefe8"
      ]
    ]
  },
  {
    "id": "9bca5b14.acefe8",
    "type": "function",
    "z": "112e9cf8.590b23",
    "name": "Loop on sensors & alarm",
    "func": "var outputMsgs = []\nvar now = new Date().getTime()\nvar nowH = new Date().toISOString()\n\n// Read global info\nfor (var j = 0; j < msg.payload.length; j++) {\n    var topicNodesPrefix = 'tidhome.sensors.' + msg.payload[j] + '.nodes'\n    var nodes = global.get(topicNodesPrefix) || []\n    for (var i = 0; i < nodes.length; i++) {\n        \n        if(nodes[i].enabled != undefined && nodes[i].enabled == false)\n            continue\n        \n        // sensor is configured but never seen !\n        if(nodes[i].timestamp == undefined) {\n            if(nodes[i].notifiedAt == undefined) {\n                var msgOut = {}\n                msgOut.payload = nodes[i]\n                msgOut.payload.gateway = msg.payload[j]\n                msgOut.payload.state = 'neverseen'\n                msgOut.payload.notifiedAt = now\n                msgOut.payload.notifiedAt_human = nowH\n                outputMsgs.push(msgOut)\n                continue\n            }\n            \n        } else {\n        \n            // sensor no longer seen after 60min !\n            var tOld = parseInt((now - nodes[i].timestamp) / (1000 * 60))\n            if(tOld > 60) {\n                if(nodes[i].notifiedAt == undefined) {\n                    // 30 min old data => alarm\n                    var msgOut = {}\n                    msgOut.payload = nodes[i]\n                    msgOut.payload.gateway = msg.payload[j]\n                    msgOut.payload.state = 'unavailable'\n                    msgOut.payload.notifiedAt = now\n                    msgOut.payload.notifiedAt_human = nowH\n                    msgOut.payload.for = tOld\n                    outputMsgs.push(msgOut)\n                }\n                \n            } else {\n                if(nodes[i].notifiedAt != undefined) {\n                    // reset notifiedAt\n                    global.set(topicNodesPrefix + '[' + i + '].notifiedAt', undefined);\n                    global.set(topicNodesPrefix + '[' + i + '].notifiedAt_human', undefined);\n                    global.set(topicNodesPrefix + '[' + i + '].for', undefined);\n                    \n                    var msgOut = {}\n                    msgOut.payload = nodes[i]\n                    msgOut.payload.state = 'available'\n                    msgOut.payload.gateway = msg.payload[j]\n                    outputMsgs.push(msgOut)\n                }\n            }\n            \n            // sensor is reporting low battery !\n            // TODO\n        }\n    }\n}\n\n// return [ outputMsgs ];\n\n// Factorize a single message\nvar finalMessage = \"\"\nfor (var j = 0; j < outputMsgs.length; j++) {\n    amsg = outputMsgs[j]\n    finalMessage += amsg.payload.state + \": \" + amsg.payload.gateway + \" / \" + amsg.payload.location + \"(\" + amsg.payload.id + \")\"\n    if(amsg.payload.for != undefined) {\n        finalMessage += amsg.payload.for + \"min\"\n    }\n    finalMessage += \"\\n\"\n}\n\nmsg.payload = finalMessage\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "x": 650,
    "y": 380,
    "wires": [
      [
        "f33af95f.a4de3"
      ]
    ]
  },
  {
    "id": "f33af95f.a4de3",
    "type": "mqtt out",
    "z": "112e9cf8.590b23",
    "name": "notifications/telegram",
    "topic": "notifications/telegram",
    "qos": "",
    "retain": "",
    "broker": "c38452a5.4f84e8",
    "x": 910,
    "y": 380,
    "wires": []
  },
  {
    "id": "650449d4.5383f8",
    "type": "comment",
    "z": "112e9cf8.590b23",
    "name": "ERRORS Handling",
    "info": "",
    "x": 130,
    "y": 40,
    "wires": []
  },
  {
    "id": "29f69392.4ebc64",
    "type": "debug",
    "z": "112e9cf8.590b23",
    "name": "Debug",
    "active": true,
    "tosidebar": true,
    "console": true,
    "tostatus": false,
    "complete": "true",
    "targetType": "full",
    "x": 880,
    "y": 180,
    "wires": []
  },
  {
    "id": "7cd8cb74.d3227c",
    "type": "mqtt out",
    "z": "112e9cf8.590b23",
    "name": "notifications/telegram",
    "topic": "notifications/telegram",
    "qos": "",
    "retain": "",
    "broker": "c38452a5.4f84e8",
    "x": 920,
    "y": 130,
    "wires": []
  },
  {
    "id": "41e3caeb.c73014",
    "type": "delay",
    "z": "112e9cf8.590b23",
    "name": "",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "30",
    "rateUnits": "minute",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "x": 720,
    "y": 130,
    "wires": [
      [
        "7cd8cb74.d3227c"
      ]
    ]
  },
  {
    "id": "2d2c7365.5aa924",
    "type": "file",
    "z": "112e9cf8.590b23",
    "name": "",
    "filename": "/var/log/nodered/flow-errors.log",
    "appendNewline": true,
    "createDir": false,
    "overwriteFile": "false",
    "encoding": "none",
    "x": 670,
    "y": 180,
    "wires": [
      [
        "29f69392.4ebc64"
      ]
    ]
  },
  {
    "id": "a24eb884.8fa9a",
    "type": "link out",
    "z": "112e9cf8.590b23",
    "name": "General CatchAll",
    "links": [
      "1bf42829.b3e0b8"
    ],
    "x": 835,
    "y": 80,
    "wires": []
  },
  {
    "id": "1bf42829.b3e0b8",
    "type": "link in",
    "z": "112e9cf8.590b23",
    "name": "errors/catchall",
    "links": [
      "139fba02.9e88fe",
      "64dacb8b.d2f3e4",
      "7ddfd97.7160228",
      "950a0758.599f88",
      "a24eb884.8fa9a",
      "da805bda.a8c0b",
      "60b06b25.f9c98c",
      "4a641f47.46cb08",
      "e89ea7a2.3f6668",
      "5d10dd0b.1db574"
    ],
    "x": 225,
    "y": 170,
    "wires": [
      [
        "41e3caeb.c73014",
        "2d2c7365.5aa924"
      ]
    ]
  }
]